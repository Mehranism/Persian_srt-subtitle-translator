[پخش موسیقی]
دیوید مالان: خوب.
این CS50 ، معرفی دانشگاه
هاروارد در شرکتهای فکری علوم
کامپیوتر و هنر برنامه نویسی است.
نام من دیوید مالان است ، و من خودم سالها پیش این کلاس را گرفتم ، اما
تقریباً این کار را نکردم.
این اولین سال من در کالج بود و من و هم اتاقی هایم
و من در هال متیوز زندگی می کردیم ، برای کسانی که آشنا بودند.
[تشویق]
خوب ، متیوز.
ادعای ما به شهرت ، در واقع ، در آن زمان این بود که اتاق ما به معنای
واقعی کلمه فقط سه سال قبل مت دیمون بود.
بنابراین از آن به بعد.
اما سال اول من ، من واقعاً اعصاب نداشتم
که در این کلاس پا بگذارم ، چه رسد به علوم کامپیوتر.
در واقع ، برای من ، علوم کامپیوتر و CS50 به
ویژه ، این کلاس بسیار مناسب بود.
مانند ، من با رایانه ها راحت
بودم ، اما مطمئناً جزء آن دسته از رایانه ها نبودم.
و بنابراین من سال اول خود را دور کردم.
درعوض ، من در واقع کلاسهای زیادی را در دولت گذراندم.
در واقع ، در دبیرستان ، من واقعاً از تاریخ لذت می بردم.
من این کلاس قانون قانون اساسی را دوست
داشتم که سال دبیرستان خود را گذراندم.
و بنابراین من فهمیدم ، خوب ، اگر این همان چیزی است که من در
دبیرستان دوست داشتم و اگر این جایی است که منطقه راحتی
من بود ، این احتمالاً کاری است که باید در دانشگاه انجام دهم.
و بنابراین من اساساً به عنوان تمرکز یا دولت بزرگ خود
برای سال ، سال و نیمی از مدرسه اعلام کردم.
اما سال پیشرفته من که به جای آن در خانه Mather زندگی می کردم.
خوب ، هیچ کس از Mather.
در عوض ، در Mather House ،
من به دنبال برخی از دوستان هستم ، فکر می کنم
هفته اول کلاس در سپتامبر همان سال به کلاس به نام CS50.
و صادقانه بگویم ، هنگامی که من در آن کلاس قدم
گذاشتم ، استاد آن زمان یک دانشمند مشهور رایانه به
نام برایان کرنیگان ، اکنون در پرینستون بود.
مثل ، من قلاب شدم.
و به معنای واقعی کلمه ، من پس از آن روزهای جمعه برمی گردم که ، در آن زمان ،
مجموعه های مشکل آزاد شدند و ساعت 7:00 ، 8:00 شب
جمعه می نشیند و به کارهای خانه شیرجه می شوم.
که لزوماً چیزی نیست که ما توصیه می کنیم.
اما برای من ، مثل این نشانه بود که ، وای ، من تماس خود را پیدا کردم.
من همکلاسی هایم را در اینجا در دانشگاه پیدا کردم.
و این برای همه اتفاق نمی افتد.
مطمئناً ، ما هیچ انتظاری نداریم که پس از گرفتن یک کلاس علوم کامپیوتر که می
خواهید یا ممکن است بخواهید دیگران را بگیرید.
اما آنچه در مورد علوم کامپیوتر و به ویژه CS50 بسیار
توانمند است ، این است که برای دنیای وسیع آن بسیار
کاربردی است ، خواه در هنر ، علوم انسانی ، علوم اجتماعی ، علوم طبیعی
باشید ، یا فراتر از آن ، این مفاهیم بسیار کاربردی و مهارت های برنامه
نویسی عملی است که با این کار از کلاس خارج خواهید شد.
اکنون در این راه چالش برانگیز خواهد بود ، و در واقع ، من روز خود را در
روز دوباره قرار دادم و حتی آن را چالش برانگیز دیدم.
و به عنوان مثال ، در اینجا عکسی از یک هک بسیار مشهور MIT ، به
اصطلاح ، از پایین جاده است ، که به موجب آن ارتباط
برقرار می کند که گرفتن آموزش از MIT مانند تلاش برای نوشیدن از شیلنگ آتش است.
این بدان معناست که اطلاعات زیادی وجود دارد ، مانند چیزهای
جدید که مطمئناً در هر روز معین از
هفته ، شما نمی توانید اولین بار در اطراف آن را جذب کنید.
اما در پایان روز ، این چالش است و زمان را در آن قرار می
دهد ، بنابراین بازده ها در پایان دوره بسیار بالاتر هستند.
و در واقع ، آیا شما با درک بسیار بهتری ، نه تنها از علوم کامپیوتر و
برنامه نویسی ، بلکه در نهایت نحوه آموزش
فن آوری های جدید و فراتر از آن ، از مسیر خارج خواهید شد.
برای سه ماه به علاوه ، آیا ما به همراهان ، دستیاران تدریس
، دستیاران دوره و خودم در کنار شما آموزش می دهیم که شما را
از طریق مطالب این دوره راهنمایی می کنیم.
اما هدف از پایان دوره این است که آن ها را به دست بیاورید و آن چرخ های آموزشی
را کنار بگذارید تا شما مجهز باشید که به خودتان ایده های
جدیدی را فراتر از خود کلاس بیاموزید.
با این حال ، با دانستن اینکه بیشتر دانش آموزان CS50 هرگز دوره CS
را نگرفته اند ، و در واقع ، طبق برنامه درسی ، آنچه در
نهایت در این دوره مهم است ، جایی نیست که شما نسبت به
همکلاسی های خود به پایان برسید ، بلکه در جایی که وقتی
شروع کردید ، نسبت به خود به پایان می رسید.
و وقتی شروع کردید امروز است.
و بنابراین در نظر بگیرید که شما با محاسبات چقدر راحت
یا ناراحت کننده هستید ، چه رسد به علوم کامپیوتر و برنامه نویسی ،
به ویژه اگر قبلاً هرگز در یک کلاس درس کاوش نکرده اید ، و دلتا را
فقط چند ماه از این زمان در نظر بگیرید که واقعاً توصیف خواهد کرد
که تا چه حد به شما رسیده است.
و این همه چیز مهم است ، نه دانش
آموز در سمت چپ یا راست ، در حال حاضر در جلو یا پشت شما ، می داند.
با این گفته ، اجازه دهید اگر ممکن است الهام بخش اضافی اضافه کنم.
در اینجا عکسی از اولین کار تکالیف من در CS50 از سال 1996 آورده شده است ، و
من توجه شما را به این واقعیت جلب می کنم
که حتی اگر این یک برنامه به اصطلاح سلام جهانی است که هفته آینده با
خودمان بازی خواهیم کرد ، اما به معنای واقعی کلمه کوتاهترین و ساده ترین
برنامه ای است که می توانید به زبان برنامه نویسی به نام C. بنویسید.
من هنوز به نوعی منهای 2 را در اولین تکالیف
تکالیف خود دریافت کردم ، یعنی همه ما می خواهیم در این راه اشتباه کنیم.
اما هدف این خواهد بود که یادگیری و لذت بردن از آن روند در اینجا باشد.
در پایان روز ، مانند من ، شما با تی
شرت CS50 با افتخار خود را با افتخار
نگه دارید ، همانطور که سنت ما نیز هست.
با این گفته ، بسیاری از سنت های دیگر در CS50 وجود دارد ، هم
در دانشگاه و هم در خارج.
و به طور خاص ، آیا ما در CS50 سعی می کنیم نه تنها ساختار پشتیبانی
دانشگاهی را که ممکن است بخواهید از طریق کلاس طی
کنید ، بلکه یک تجربه مشترک مشترک جمعی نیز ارائه دهیم.
این بدان معناست که فقط در چند روز ، ما این اصطلاح را به طور رسمی
با CS50 Puzzle Day شروع می کنیم ، که نه تنها فرصتی
برای جمع شدن با دوستان ، با پیتزا و جوایز و همچنین
معما های منطق در انواع مختلف است ، بلکه واقعاً برای ارسال این پیام که خود
علوم کامپیوتر دیگری در مورد برنامه نویسی نیست ، این نیست
که در مورد C نیست ، بلکه مربوط به Python نیست ، بلکه مربوط به
Smartly Syms نیست ، بلکه درباره برنامه های DOLORMANTING SORIVES SORVIVES
SORVIVES نیست.این کلاس یا فراتر از آن.
و در واقع ، آیا در پایان ترم ، تقویت های یکسان
از طریق کمی چیزی که ما آن را CS50 Hackathon می نامیم ،
که فرصتی خواهد بود برای ایجاد پروژه های نهایی
خود ، سنگ بنای این دوره ، پس از آن به دنبال
نمایشگاه CS50 ، به دنبال آن ، یک نمایشگاه
گسترده برای دانشجویان ، برنامه های خود در سراسر دانشگاه
، و کارکنان شما در سراسر پردیس های نهایی است.پایان مدت
و در واقع ، هدف در پایان روز ، به طور خاص
با آن پروژه نهایی ، این است که برای
خودتان ایجاد کنید ، برای همکلاسی های خود ، برای شرکت
کنندگان ، کاری که ما حتی به شما یاد ندادیم که چگونه انجام دهید.
و در واقع ، این در نهایت نشان می دهد که شما واقعاً در راه و
آماده هستید.
به همین منظور ، فکر می کردیم که ما می توانیم از طریق این ویدیوی کوتاه ، به
شما احساس گذشته CS50 می دهیم ، اگر بتوانیم چراغ
ها را کمرنگ کنیم ، این تصویری از همه آنچه در انتظار اینجا و بعد است ، نقاشی می کند.
[پخش ویدیو]
[پخش موسیقی]
[پایان پخش]
دیوید مالان: خوب ، بنابراین در CS50 و خود علوم کامپیوتر
خوش آمدید.
بنابراین علوم کامپیوتر چیست؟
خوب ، به عبارت ساده ، این مطالعه اطلاعات است.
مانند ، چگونه آن را نمایندگی می کنید و چگونه آن را پردازش می کنید.
اما اساساً ، آنچه در این کلاس به شما یاد خواهیم
داد ، تفکر محاسباتی است.
یعنی استفاده از ایده ها از علوم کامپیوتر به
مشکلات مورد علاقه ما در داخل کلاس و مشکلات مورد علاقه
شما پس از کلاس.
و بنابراین ، در پایان روز ، علوم کامپیوتر واقعاً
در مورد حل مسئله است ، Ergo که نوع کاربرد جهانی را دارد.
و با حل مسئله ، منظور ما چیزی بسیار ساده است.
در واقع ، ما می توانیم آن را به شرح زیر با این تصویر ذهنی تقطیر کنیم.
این حل مسئله است.
شما برای حل مشکل مشکلی دارید ، بنابراین به عنوان ورودی که می
خواهید حل کنید شناخته می شود.
و البته هدف برای حل
مسئله ، تولید راه حل است.
بنابراین خروجی در این مدل راه حل خواهد بود.
بخش جالب در نهایت این است که شما در نحوه پردازش این ورودی و تبدیل
آن به آن خروجی ، مشکلات حل کننده ERGO ، این است.
اما قبل از اینکه بتوانیم این کار را انجام دهیم ، همه ما باید قبول کنیم که چگونه می
توانیم این ورودی ها و خروجی ها را ارسال کنیم ،
به خصوص اگر بخواهیم این کار را با استفاده از رایانه های به معنای واقعی کلمه ، آنها را
به روش جهانی انجام دهیم ، آنها لپ تاپ ، دسک تاپ ، تلفن یا بیشتر نوع
دیگر دستگاه الکترونیکی امروزه هستند.
بنابراین چگونه می توانیم این کار را انجام دهیم؟
خوب ، روش های مختلفی برای نشان دادن اطلاعات در جهان وجود دارد.
به عنوان مثال ، اگر من می خواستم به سبک مدرسه قدیمی ، شاید در یک اتاق
کوچکتر ، حضور داشته باشم ، ممکن است 1 ، 2 ، 3 ، 4 ، 5 ،
6 ، 7 و غیره انجام دهم و فقط افراد را روی دست انسان خود بشمارم.
این در واقع به عنوان نماد Unary شناخته می شود ، در غیر این صورت از نظر ریاضی به عنوان پایه
یک شناخته می شود ، زیرا شما از انگشتان خود به معنای واقعی کلمه در این
مدل به عنوان رقم استفاده می کنید.
اما کمی سوال سریع
چقدر می توانید با یک دست انسانی حساب کنید؟
اگر از یک سیستم پایه متفاوت از یک استفاده کنید ، پنج مورد نادرست است.
بنابراین اگر شما فقط از Unary استفاده می کنید و فقط 1 ، 2 ، 3 ، 4 ، 5 را حساب می کنید ،
بدیهی است.
اما من جرات می گویم که می توانم به تنهایی الگوهای بیشتری
در دست انسان خود بیاورم که باعث می شود بدون دست دوم یا چند پا ،
من را بیشتر از پنج بشمارم.
در واقع ، شاید برای افراد راحت تر ،
شاید چقدر می توانید روی یک دست انسانی واحد حساب کنید ، شاید؟
بنابراین 31 ، آن را باور کنید یا نه ، در واقع پاسخ صحیح است.
اما چرا؟
خوب ، در اینجا من در ابتدا بسیار ساده لوحانه شروع کردم.
1 ، 2 ، 3 ، 4 ، 5.
و من فقط تمام انگشتانم را با هم ترکیب کردم و کل جمعی را حساب کردم.
اما اگر من کمی باهوش تر باشم و الگوی انگشتانی را
که بالا می رود ، در نظر بگیرم ، چه می شود.
بنابراین شاید این هنوز صفر باشد.
این یکی است.
اما اکنون شاید ما فقط به طور جهانی موافق باشیم که این دو مورد است.
حتی اگر این فقط انگشت نشانگر من باشد.
شاید همه ما فقط قبول کنیم که این سه با دو انگشت است.
شاید ما موافق باشیم که این اغلب با یک انگشت میانی
توهین آمیز است ، اما این چهار نفر خواهد بود.
این می تواند پنج باشد.
این می تواند شش باشد.
این می تواند هفت باشد.
و اگر انگشتانم را از این طریق اجازه دهم- به من اجازه دهید آن را
خراب کنم- این در واقع 31 است.
اما دوباره ، چرا؟
اما تفاوت در اینجا این است که ما دیگر از Unary استفاده نمی کنیم یا یکی از آنها را
به عنوان یک ریاضیدان می گوید ، بلکه دو پایه را پایه گذاری می کنیم.
زیرا اگر ما نه تنها تعداد انگشتانی را که من
استفاده می کنم ، در نظر بگیریم ، بلکه هر انگشت در دو
حالت بالقوه پایین یا بالا است.
پایین ، بالا ، A ، B ، سیاه ، سفید ، با
این حال شما می خواهید آن دو ایالت جهان را متمایز
کنید ، اکنون آنچه را که پایه دو نامیده می شود ، و شاید با آشناتر عمل می
کنید ، حتی اگر به خودی خود شخص رایانه نباشید ، این به اصطلاح سیستم باینری است.
و شانس وجود دارد ، حتی اگر شما به هیچ وجه یک فرد علوم کامپیوتر
نباشید ، احتمالاً به طور کلی می دانید که رایانه ها فقط چه الفبایی
را می فهمند یا صحبت می کنند؟
بنابراین آنهایی که و صفر ، صفر و آن ها ، در غیر این صورت به عنوان سیستم باینری شناخته می شوند.
و در واقع ، یک اصطلاح هنری در اینجا وجود دارد که شایان ذکر است.
هنگامی که از صفرها و مواردی استفاده می کنید ، که البته در مجموع دو رقم هستند ، شما
رقم باینری دارید ، به اصطلاح صحبت می کنید- BI که حاوی دو
است ، این بدان معنی است که دو امکان وجود دارد ، صفر یا یک.
اگر در واقع از شر برخی از این نامه ها خلاص شویم و سپس به این دو عبارت
بپیوندید ، در اینجا یک اصطلاح فنی دارید که کمی است.
کمی فقط یک رقم باینری است ، به این معنی که این صفر یا یک است.
و این در مقابل ، البته با سیستم شما و من
به عنوان سیستم اعشاری می شناسیم.
DEC دلالت بر 10 ، زیرا در دنیای واقعی
شما و من روزانه از صفر تا نه استفاده می کنیم ، که 10 امکان است.
رایانه ها فقط از صفر و یک استفاده می کنند ، یعنی دو بیت ،
به جای آن اطلاعات را نشان می دهند.
بنابراین چگونه می توانیم این اطلاعات را نشان دهیم ، به خصوص وقتی که در
پایان روز آنچه ما از آن استفاده می کنیم واقعاً رایانه و دستگاه های الکترونیکی هستند؟
خوب ، اگر من می خواهم صفر را نمایندگی کنم ، واقعاً می توانم این را به عنوان
مشابه دنیای فیزیکی فکر کنم.
شاید من یک لامپ نوری داشته باشم که توسط سوئیچ خاموش یا
کنترل شده باشد که آن را خاموش یا روشن کند.
بنابراین می توانید به یک رقم باینری فکر کنید که صفر است و
واقعاً فقط یک لامپ است که خاموش است.
در مقابل ، اگر شما به یک دنیای دیجیتال فکر می کنید ،
البته که دومین دو امکان است ، می
توانید در دنیای انسان یا آنالوگ ، دنیای فیزیکی ، به
عنوان یک لامپ که روشن است ، فکر کنید.
و در واقع ، آنچه در داخل مک ، رایانه شخصی شما ، تلفن اندرویدی شما وجود دارد ،
آیفون شما میلیون ها سوئیچ کوچک نور کوچک است که به عنوان
ترانزیستور شناخته می شوند که فقط می توانند روشن یا خاموش شوند ، روشن یا خاموش شوند.
و اساساً ، می توانید از آن ترانزیستورها برای ذخیره اطلاعات استفاده کنید
زیرا اگر می خواهید صفر را ذخیره کنید ، یکی از این سوئیچ ها را خاموش می کنید.
اگر می خواهید یکی را ذخیره کنید ، یکی از آن سوئیچ ها را روشن می کنید.
البته ، این نوع سؤال را دعوت می کند ، خوب ، چگونه
می توانیم بالاتر از صفر یا یک حساب کنیم؟
خوب ، به نظر می رسد ما باید بیش از یک
بیت واحد ، یک لامپ واحد استفاده کنیم.
بنابراین اگر می خواستیم بالاتر از ، به عنوان مثال ، صفر یا یک ، حساب کنیم
، چرا پیش نمی رویم و شاید این کار را انجام دهیم؟
بنابراین فقط به این ترتیب جایی برای قرار
دادن اینها دارم ، بگذارید برخی از لامپ های فیزیکی
واقعی ما را از صحنه قرض بگیرم.
و بگذارید پیشنهاد کنم که اکنون ، با سه بیت روی صحنه ، سه سوئیچ نوری ،
سه ترانزیستور ، هر استعاره ای که از آن راحت تر هستید ، اینگونه
است که یک کامپیوتر صفر را نشان می دهد ، زیرا همه آنها خاموش هستند.
بنابراین خاموش ، خاموش است.
اما اگر یک رایانه می خواست به یکی از آنها حساب کند ، ما می توانستیم این کار را ساده لوحانه انجام دهیم.
ما می توانیم این کار را روشن کنیم.
اگر رایانه می خواست به نمایش بگذارد ، ما می توانستیم این کار را انجام دهیم.
و اگر یک رایانه می خواست سه نماینده داشته باشد ، ما می توانستیم این کار را انجام دهیم.
اما من به نوعی نقاشی خودم را به گوشه ای می زنم
و از این لامپ ها به همان اندازه هوشمندانه می توانم
استفاده نمی کنم ، زیرا در حال حاضر من فقط به اندازه سه حساب می کنم.
بنابراین اگر می خواهم به چهار ، تا پنج تا
شش حساب کنم ، به لامپ های بیشتری نیاز دارم.
آیا می توانیم کمی باهوش تر باشیم؟
خوب ، باز هم ، شخص دیگری که در میان آن راحت تر است ،
اسپویلر اینجا چیست؟
چقدر با استفاده از صفرهای باینری و آنهایی که
می توانم با سه لامپ در کل حساب کنم؟
در پشت؟
بله
بنابراین هفت جواب اینجاست.
و اگر این نیز به نوعی تعجب می
کنید ، مردم چگونه 31 و 7 می فهمند؟
این هدف در اینجا است.
پس بگذارید این کار را انجام دهم.
بگذارید دوباره همه اینها را خاموش کنم تا سه لامپ یا سوئیچ من
دوباره صفر را نشان دهند.
و اولین شخص آسان است.
اینگونه است که یک کامپیوتر شماره یک را نشان می دهد.
خاموش ، خاموش ، خاموش است.
با این حال ، چگونه یک کامپیوتر نمایانگر دو است؟
خوب ، درست مثل مثال انگشت پیشنهادی من.
بیایید این کار را انجام دهیم
بیایید این یکی را خاموش کنیم و این یکی را روشن کنیم.
اینگونه است که یک کامپیوتر دو را نشان می دهد.
با گفتن خاموش ، خاموش.
به عبارت دیگر ، 010 راهی برای تلفظ آن به صورت دیجیتالی خواهد بود.
چه می شود اگر من به جای آن بخواهم سه نمایندگی کنم؟
اینگونه است که روی انگشتم این کار را کردم ، با دو انگشت.
خوب ، من قصد دارم این یکی را روشن کنم.
این سه است.
اکنون ، این امر برای کسانی که کمتر راحت هستند ، غیر جالب توجه هستند.
اکنون اینگونه است که من شماره چهار را نمایندگی می کنم.
اینگونه است که من پنج نفر را نمایندگی می کنم.
اینگونه است که من شش نفر را نمایندگی می کنم.
و این ، طبق اسپویلر ، این است که من هفتم را نمایندگی می کنم.
بنابراین شاید خیلی غیر بدیهی که من فقط انجام دادم
یا چرا این الگوهای را انتخاب کردم.
اما من به جرات می گویم اگر شما در چشم ذهن خود به عقب برگردید یا به معنای واقعی
کلمه بعداً در فیلم ، متوجه خواهید شد که من واقعاً هشت الگوی لامپ را به شما نشان داده ام.
اولین نفر خاموش ، خاموش ، خاموش بود.
آخرین مورد ، روشن ، روشن بود.
و بین آن زمان شش مورد دیگر وجود داشت.
خوب ، صبر کنید ، چرا هفت؟
خوب ، اگر شروع به شمارش صفر کنید و من ادعا می کنم هشت امکان وجود دارد ، فقط می
توانید از صفر تا هفت حساب کنید ، همانطور که به زودی خواهیم دید.
بنابراین چگونه این الگوهای به وجود می آیند و چه
چیزی در واقع رایانه های ما انجام می شود؟
خوب ، این در واقع کاری را کمی شبیه به این انجام می دهد ، کاملاً شبیه به اعشاری.
بنابراین در دنیای بشر ، من و شما
بسیار عادت داریم از پایه 10 ، صفر تا نه ، a.k.a استفاده کنیم.
اعشاری
خوب ، چگونه می توانیم از آن به طور غریزی به عنوان انسان استفاده کنیم؟
خوب ، این شماره به وضوح روی صفحه چیست؟
123
اما چرا 123 است؟
مانند سالها ، شما واقعاً فکر نکرده اید که
چرا این الگوی نمادها یا رقم های روی صفحه نمایش ، یک ، دو
، سه ، از نظر ریاضی این شماره را نشان می دهد که شما
به وضوح به عنوان 123 می شناسید.
اما اگر به مدرسه کلاس بپیوندید ،
مانند من شانس به شما آموخته می شود که مناسب ترین رقم در
ستون آنهایی است ، این رقم دوم در ستون TENS است ، این رقم در
ستون صدها و غیره است.
بنابراین حتی اگر هیچ یک از ما مجبور نباشیم این ریاضیات را صریحاً انجام
دهیم ، کاری که شما فوراً انجام می دهید 100 برابر 1 به علاوه 10 بار
2 به علاوه 1 بار 3 است که به شما 100 به علاوه 20 به علاوه 3 می دهد.
اوه ، به همین دلیل 123 است ، زیرا این رقم ها به
این ترتیب اهمیت دارند.
رقم های سمت چپ وزن بیشتری دارند ، به
اصطلاح ، از رقم های سمت راست.
بنابراین چه چیزی می توانیم از این امر دور شویم؟
خوب ، بیایید ابتدا آن را فقط به عنوان هر شماره سه رقمی تعمیم دهیم.
بنابراین شماره ، شماره ، شماره.
ستون آنهایی ، ستون TENS ، ستون صدها.
اما برخی از ریاضیات در آنجا ادامه دارد ، و به خصوص پیچیده نیست.
اینها در واقع قدرت 10 هستند.
بنابراین 10 تا 0 ، 10 تا 1 ، 10 تا 2 و سیستم اعشاری شما وجود دارد.
از آنجا که پایه در این مقدار 10 است ، به
این دلیل است که 10 امکان برای هر یک از این مکان ها وجود
دارد ، صفر تا نه.
اما در دنیای باینری ، در دنیای رایانه هایی که همه آنها
صفرها و آنهایی هستند ، چرا؟
زیرا همه آنها از نظر جسمی ترانزیستور هستند.
لامپ های کوچک ، ریز و ریز و ریز که می توانند خاموش یا روشن باشند.
اگر فقط دو رقم برای بازی با آن دارید
، البته پایه 10 باید به یک پایه دو تبدیل شود.
و اکنون اگر ما در اینجا ریاضی را انجام دهیم ، 2 تا 0 ، 2 تا 1 و 2
تا 2 ، ستون آن ها ، ستون Twos ، ستون Fours را می گیرید.
و اگر 8 ، 16 ، 32 ، 64 ، 128 و غیره
ادامه دهیم ، قدرت آن به جای قدرت 10.
اما این به این معنی است که رایانه ها اطلاعاتی را
دقیقاً به همان روشی که شما و من از کودکی داریم نشان می
دهند ، اما آنها رقم کمتری در اختیار دارند ،
بنابراین این ستون ها نیاز به وزن متفاوتی دارند.
بنابراین ما هنوز هم می توانیم از صفر تمام راه را به سمت بی نهایت حساب کنیم.
بنابراین این به چه معنی است؟
خوب ، در اینجا ما سه بیت روی صفحه ، 000 داریم.
اگر بخواهیم این کار را از نظر ذهنی یا روی مداد کاغذ به اعشاری تبدیل کنیم ، چگونه این
کار را انجام می دهیم؟
خوب ، 4 بار 0 به علاوه 2 بار 0 به علاوه 1 بار 0.
این شماره ریاضی را به شما می دهد و من صفر می شناسم.
این سه لامپ بود.
خاموش ، خاموش ، خاموش
خوب ، اگر ما یک لامپ را در سمت راست روشن کنیم ، چه می شود؟
این تعداد باینری ، 001 چه تعداد اعشاری را نشان می دهد؟
فقط یک ، زیرا 4 بار 0 ، 2 بار 0 ، 1 بار 1 است.
در اینجا جایی است که همه چیز جالب تر
می شود ، حتی اگر به شکل لامپ یا حتی شکل دست فیزیکی غیر واضح باشد.
010 در باینری چه چیزی در اعشاری است؟
دو ، زیرا 2 بار 1 است و همین است.
011 در باینری ، البته اکنون سه است.
این اکنون چهار است.
این اکنون پنج است.
این اکنون شش و هفت است.
ON ، ON ، ON یا 111 بالاترین چیزی است که می توانیم با این سه بیت حساب کنیم.
خوب
بنابراین چگونه ممکن است یک رایانه به طور شهودی به اندازه هشت حساب شود؟
احتمالاً چه کاری باید انجام دهید؟
شما نیاز به اضافه کردن کمی دارید.
بنابراین به یک لامپ دیگر ، سوئیچ دیگر نیاز دارید.
شما به حافظه بیشتری نیاز دارید ، به اصطلاح ، برای استفاده
از نامگذاری که احتمالاً با آن آشنا هستید.
بنابراین ، در واقع ، اگر همه اینها را به
صفر تغییر دهیم اما در مجموع چهار نفر خود را به
خودمان می دهیم ، این مکان هشتم خواهد بود زیرا فقط
یک قدرت دیگر وجود دارد.
بنابراین 1000 اعشاری شماره هشت است.
شما باینری 1000 نمی گویید.
شما به معنای واقعی کلمه می گویید 1000.
اما این شماره ای است که شما و من به عنوان هشت می شناسم.
و می توانید ادامه دهید و بالا و بالا بروید.
و چگونه رایانه های دارای اکسل یا هر نوع نرم افزار خرد کردن شماره
واقعاً زیاد هستند و تعداد بسیار زیادی را پیگیری می کنند؟
رایانه فقط ترانزیستورهای بیشتری را به سمت آن پرتاب می کند ، بیت های
بیشتر و بیشتر برای شمارش بالاتر و بالاتر و بالاتر از این.
به نظر می رسد ، یک بیت ، سه بیت ، حتی چهار بیت در عمل
چندان مفید نیستند زیرا به معنای واقعی کلمه می توانید به
اندازه هفت یا شاید 15 یا 31 حساب کنید.
بنابراین ، همانطور که معمولاً شناخته شده است ، استفاده از بایت بیت ها به جای آن است.
چند بیت در یک بایت ، برای افراد آشنا وجود دارد؟
بنابراین فقط هشت است.
چرا هشت؟
این فقط از یک یا دو یا سه یا شماره دیگر مفیدتر است.
و به عنوان گذشته ، اتفاق می افتد که یک قدرت دو است ،
که فقط از نظر الکترونیکی نیز مفید است.
بنابراین یک بایت پس از آن فقط 8 بیت است.
و در اینجا ستون هایی که من از بالای سرم بیرون کشیدم.
در اینجا نحوه نمایش یک رایانه صفر در اعشاری ، اما
با استفاده از هشت رقم باینری یا بیت.
چیزهای بی اهمیت
و باز هم ، این چیزی نیست که علم کامپیوتر در مورد
آن باشد ، بلکه به شناخت مرزهای پایین و مرزهای بالایی
این نوع ارزش ها کمک می کند.
اگر این صفر باشد ، چقدر می توانید با 8 بیت یا 1 بایت حساب کنید؟
بله
بنابراین در واقع 255 است.
بنابراین اگر بخواهم همه این صفر ها را به آنهایی تغییر
دهم و سپس ریاضی سریع ذهنی یا ماشین حساب را انجام دهم ، 128 به علاوه
64 به علاوه 32 ، 16 ، 8 ، 4 ، 2 و 1 در واقع 255 نفر را به من می دهند.
به علاوه 0 ، که 256 امکانات را به من می دهد.
بنابراین این فقط به این معنی است- این دوباره نوع ریاضی
نیست ، اما شما معمولاً در دنیای رایانه
و برنامه نویسی قدرت جهانی دو ، شماره هایی مانند 255
، 256 مشاهده خواهید کرد.
چرا؟
زیرا این واحدهای متداول اقداماتی است که سیستم ها تمایل به استفاده از آنها دارند.
بنابراین بگذارید در اینجا مکث کنم و با توجه به باینری ، صفرها ، و
آنهایی که ، ترانزیستورها و مانند آن ، هر گونه سؤال یا سردرگمی را که می توانیم پاک کنیم ، ببینم؟
اوه ، سوال واقعا خوب
چرا BIT ها به جای اینکه با بازی با ولتاژ ، 0 ٪ ، 50 ٪ ، 100
٪ را خاموش یا خاموش کنند؟
بنابراین استنباط ولتاژ شما در واقع صحیح است.
این همان کاری است که رایانه ها به طور معمول انجام می دهند.
شاید آنها از 0 ولت ولت برای نشان دادن 0 استفاده کنند ، شاید 5 ولت 5-ish برای نمایندگی 1 باشد.
به نظر می رسد انجام افراط و تفریط در رایانه ها بسیار آسان است.
اگر شروع به تقسیم آن دامنه ولتاژ کنید ،
برای کسانی که هر یک از برق خود را به
یاد می آورند ، دقیق تر و سخت تر می شود.
و اگر اوضاع را کمی بیش از حد تیره و تار می
کنید ، ممکن است صفر را برای یک یا یک یا یک یا یک یا سه اشتباه کنید.
بنابراین به نظر می رسد استفاده از سیستم باینری ساده تر است.
اما رایانه هایی وجود دارند که به عنوان رایانه های سه گانه شناخته می شوند
که در واقع از سه مقدار ، صفر ، یک و دو استفاده می کنند ، که در جایی
است ، البته بین باینری و اعشاری.
اما می توانید کارهای مختلفی انجام دهید.
این فقط روشن و خاموش است.
در مورد نکته ، من نمی خواهم واقعاً چشمگیر باشم و رایانه خود را خاموش کنم ، اما اگر
پلاگین برق را بیرون بیاورم ، می تواند خاموش باشد ، به معنای واقعی کلمه ، a.k.a.
صفر
دوباره آن را وصل کنید ، این یکی است.
فقط یک پاکیزگی و سادگی برای آن وجود دارد.
س questions الات یا سردرگمی دیگر که می توانیم پاک کنیم؟
نه؟
خوب
بنابراین اگر برای لحظه ای توافق دارید ، خوب ، با استفاده از صفر و موارد
فقط ، می توانیم هر شماره مورد نظر خود را از صفر بر
روی بالا بیاوریم ، بگذارید پیشنهاد کنم که ما با رایانه ها و جیب ها و دسک
تاپ های خود کارهای مفیدتری انجام دهیم و
مانند نامه ها ، به خاطر اسناد گوگل ، مایکروسافت ورد یا هر نوع
متنی که ممکن است بخواهیم بنویسیم.
بنابراین اکنون دانستن اینکه رایانه ها فقط حاوی صفحات و آن ها هستند ، و
بنابراین فقط حاوی سخت افزاری مانند ترانزیستور هستند ،
چگونه می توانید چیزی مانند یک حرف بزرگ A را به زبان
انگلیسی در داخل یک رایانه نشان دهید؟
که البته دیگر شماره ای نیست.
مثل ، چه کاری می توانیم انجام دهیم؟
آره؟
مخاطب: ما می توانیم از الفبای استفاده کنیم و سپس از اعداد استفاده کنیم.
دیوید مالان: خوب ، بله.
بنابراین ما می توانیم الفبای A را از طریق Z به زبان انگلیسی
بکشیم و فقط می توانیم هر حرف را به یک شماره اختصاص دهیم.
و صادقانه بگویم ، این فقط جواب صحیح نیست ،
بلکه واقعاً تنها جواب است.
زیرا در پایان روز ، اگر تمام آنچه
شما دارید صفر و مواردی در دسترس
شما هستند ، این کلیت راه حل بالقوه برای این مشکل است.
بنابراین معلوم است که ، بله ، نامه بزرگ A ، چند سال پیش ،
توسط یک دسته از افراد در یک اتاق تصمیم گرفته شده است که باید
با این الگوی صفرها و افراد ارائه شود.
01000001.
و اکنون ، همانطور که می خواهید کمی ریاضی باینری سریع انجام
دهید ، از چه تعداد اعشاری برای نشان دادن سرمایه ظاهراً A استفاده می شود؟
بنابراین 65 ، زیرا این 64 به علاوه 1 به علاوه 1 بار 1 65 است.
B چیست؟
معلوم است که 66 است.
C چیست؟
67
بنابراین آنها همه چیز را در آنجا ساده نگه داشتند.
ممکن است خوب باشد اگر صفر باشد یا شاید یکی باشد.
اما نه ، ما در عوض با 65 گیر کرده ایم.
اما همه چیز پس از آن بسیار قابل پیش بینی است.
و در واقع ، برای حروف کوچک ، مجموعه
ای از اعداد دیگر مانند حروف کوچک A 97 اتفاق می افتد ،
حروف کوچک B 98 و غیره اتفاق می افتد.
اما باز هم ، این مانند چیزهای بی اهمیت CS است.
اما آنچه در اینجا مهم است این است که در واقع از 65 تا 66 تا 67
به بالا پیوسته است.
این چیزی است که ما می توانیم به تنهایی از این نامه استفاده کنیم.
این سیستم چیست؟
این نقشه برداری که خودتان پیشنهاد می کنید چیست؟
این ASCII ، کد استاندارد آمریکایی برای مبادله اطلاعات است.
و در واقع ، این یک دسته از آمریکایی ها سالها پیش بودند که با این سیستم روبرو شدند.
متأسفانه ، در آن زمان ، آنها فقط 7 و در نهایت 8 بیت را برای
نمایندگی حروف ، حروف بزرگ و کوچک ، اعداد روی صفحه
کلید و همچنین نمادهای نگارشی نیز اختصاص دادند.
و بنابراین ، در هر لحظه قبل ، اگر آمریکایی ها در این اتاق ، به
اصطلاح ، فقط از 8 بیت استفاده می کردند ، چند شخصیت مختلف را می
توانیم با یک کامپیوتر در این داستان نمایندگی کنیم؟
بنابراین فقط 255 ، از نظر فنی 256 اگر دوباره از صفر شروع به شمارش کنیم.
بنابراین این تقریباً کافی نیست که تمام زبانهای انسانی را نشان
دهد ، اما کافی است که حداقل انگلیسی را در میان برخی دیگر نمایندگی کند.
به عنوان مثال ، در اینجا ، نمودار نقشه برداری ASCII است.
و مطمئناً ، اگر در اینجا در این ستون بزرگنمایی کنیم ، 65 سرمایه A
است ، 66 سرمایه B ، DOT ، DOT ، DOT 72 H ، 73 IS I و غیره است.
بنابراین حداقل برای همه این نامه های انگلیسی یک نقشه برداری استاندارد وجود دارد.
خوب ، فرض کنید شما باید یک ایمیل یا یک پیام متنی دریافت
کنید یا مانند یک Doc Google که حاوی این الگوی صفرها و موارد است.
بنابراین 01001000 و موارد دیگر و غیره.
بنابراین 3 بایت ارزش دارد.
سه مجموعه 8 بیت.
یعنی 3 بایت ، که هر یک از آنها یک حرف واحد را در ASCII نشان می دهد.
چه پیامی دریافت کرده اید؟
خوب ، من این بار ریاضی را انجام می دهم تا مجبور نباشیم.
فرض کنید آنچه واقعاً دریافت کردید اعشاری 72 ، 73 ، 33 بود.
شما فقط چه پیامی دریافت کردید؟
اگر نمودار قبلی را به یاد می آورید.
سلام در واقع درست بود.
چرا؟
از آنجا که H 72 است ، من 73 ساله هستم.
و یک دقیقه صبر کنید ، 33.
بنابراین در اینجا H. در اینجا آمده است. 33 ، اگر به جای آن
برجسته شویم ، اتفاق می افتد که یک تعجب است.
بنابراین به معنای واقعی کلمه همان چیزی است که در زیر هود اتفاق می افتد ، به
اصطلاح ، وقتی امروز یک پیام متنی می گیرید که به معنای واقعی کلمه در
همه کلاه ها و یک تعجب می گوید ، سلام!
تلفن شما حداقل سه بایت دریافت کرده است که هر یک از
آنها نامه ای از الفبای را نشان می دهد.
رایانه شما به سرعت ریاضیات ذهنی را انجام
می دهد تا بفهمد دقیقاً چه اعداد است و سپس در
خاطرات خود در نمودار به اصطلاح ASCII جستجو می کنید ، به نوعی
، چه نامه ای را باید در واقع روی صفحه نمایش ببینید.
و بنابراین اگر می خواهید آن پیام را نمایش
دهید ، واقعاً آن را به زبان انگلیسی می بینید بر خلاف آن معادل های عددی.
چگونه دیگر ممکن است از این استفاده کنیم؟
خوب ، اینجا دوباره این نمودار است.
و شاید فقط برای تغییر چیزها ، شاید کمی از من فشار بیاورید
، چرا سعی نمی کنیم چیز دیگری را هجی کنیم؟
این بار یک کلمه سه حرفی متفاوت ، اما شاید هشت داوطلب.
آیا می توانیم داوطلبان ارزش بایت بگیریم؟
و من می توانم در ازای آن معامله را با برخی از توپ های استرس شیرین کنم.
شما فقط باید راحت باشید که روی صحنه می آیید و در اینترنت قرار می گیرید.
بنابراین بله
یک ، دو
در مورد سه ، چهار
حدود پنج ، شش ، هفت.
و حدود هشت
بیا بلند
دور تشویق داوطلبان ما.
بله
[تشویق]
خوب
بنابراین کاری که من هر یک از شما انجام می
دهم این است که کمی به ترتیب خاصی نشان دهید.
بنابراین اگر می خواهید فقط ، به هر ترتیب
، خود را در اینجا با مخاطب روبرو کنید.
بیا
خوب
و ما شما را نمایندگی خواهیم کرد- خوب ، باید ببینیم چه کسی به کجا ختم می شود.
کمی از این راه کمی.
به این ترتیب ، از این طریق.
خوب
بنابراین شما باید مکان آنهایی باشید و فقط آن را در مقابل خود نگه دارید.
مکان دوقلوی
سه
مکان چهار
مکان هشتم
16 ، 32 ، 64 و 128.
و فقط اگر می توانستید کمی خود را فشرده کنید.
بنابراین هر یک از این افراد کمی در یک مکان خاص نشان می دهند.
و بیایید این را بگوییم.
اگر فقط در آنجا ایستاده اید و بدون هیچ گونه افزایش دست در آنجا ایستاده
اید ، فرض خواهیم کرد که شما یک صفر را به سادگی نمایندگی می کنید.
اگر دست شما بالا برود ، مخاطب باید
فرض کند که شما نماینده یک نفر هستید.
و بنابراین ، کاری که ما انجام خواهیم داد این است که یک کلمه سه حرفی
را هجی کنیم ، و در هر دور از این ، شما یا مانند این خواهید ماند ،
یا دست خود را بالا خواهید برد.
اما ابتدا ، بیایید در واقع با برخی از داوطلبان خود در
اینجا ملاقات کنیم ، اگر می خواهید نام خود را بگویید ، شاید در جایی که اهل و
یا تحصیل هستید ، با موقعیت شماره یک شروع کنیم.
مخاطب: سلام.
نام من بروک است.
من اهل ایندیانا هستم و در حال مطالعه زیست شناسی و علوم کامپیوتر هستم.
دیوید مالان: خوب.
خوش آمدید
مخاطب: سلام ، من بکا هستم.
من مانند مریلند ، منطقه دی سی هستم و در حال مطالعه مهندسی برق هستم.
دیوید مالان: خوش آمدید.
مخاطب: سلام ، من آدیسون هستم.
من اهل مریلند هستم.
من در حال مطالعه مهندسی هستم.
مخاطب: سلام.
من شارون هستم
من اهل رواندا هستم و در حال مطالعه CS و ریاضی هستم.
دیوید مالان: خوش آمدید.
مخاطب: سلام ، من گریس هستم.
من اهل آلاباما هستم و در حال مطالعه مهندسی برق هستم.
دیوید مالان: خوش آمدید.
مخاطب: سلام ، من آنجلینا هستم.
من اهل مریلند هستم.
و همچنین ، من در متیز می مانم.
دیوید مالان: خوب.
متیوز
خوب
[تشویق]
مخاطب: و من در حال مطالعه ریاضیات کاربردی و Econ و
همچنین علوم محیط زیست و سیاست های عمومی هستم.
دیوید مالان: خوش آمدید.
مخاطب: من اوون بلز هستم و اهل روستای ویرجینیا هستم و در حال مطالعه CS هستم.
دیوید مالان: خوب ، خوش آمدید.
و؟
مخاطب: نام من حداکثر است.
من اهل لندن هستم.
من همچنین در متیوز می مانم و در حال مطالعه علوم کامپیوتر
و علوم اعصاب هستم.
ممنون
دیوید مالان: از آنجا نیز خوش آمدید.
اگر تعجب می کنید ، چرا من در
ابتدا این عینک را می پوشیدم- امروزه در اینترنت
بسیار متداول است.
بنابراین به نظر می رسد که این ممنوعیت های ری در واقع فیلم های ویدئویی را
ضبط می کنند ، و ما یک زن و شوهر از آنها داریم و فکر می کردیم که آنها را به یک
زن و شوهر داوطلب ارائه می دهیم.
اگر کسی بخواهد دیدگاه خود را برای همه در اینجا ثبت کند.
و Vlad در اینجا به اطمینان حاصل می شود که آنها در حال ضبط هستند.
داوطلب دوم.
بله ، شماره دو.
خوب
بنابراین ، همانطور که ولاد این مجموعه ها را تنظیم می کند ، در قسمت
پشتی تکه های کاغذ شما دستورالعمل هایی برای سه دور زیر دارید.
هر دور یک نامه را نشان می دهد.
بخش مشارکت مخاطبان این است که در واقع
ریاضیات ذهنی را انجام دهیم تا بفهمد این داوطلبان چه تعداد را
نمایندگی می کنند.
بنابراین پیش بروید و دور یک را اجرا کنید ، یا دست خود را پایین نگه دارید یا آن را
به درستی بالا ببرید.
خوب
داوطلبان ما در اینجا چه تعداد را نمایندگی می کنند؟
مخاطب: 66.
دیوید مالان: 66 ، زیرا ما 64 به علاوه 2 داریم.
سپس نقشه را به چه نامه ASCII نقشه می کند؟
مخاطبان: ب.
دیوید مالان: B اولین نامه بود.
خوب ، دست پایین.
دور دو ، برو.
کمی سخت تر
اکنون چه چیزی نمایندگی می شود؟
مخاطب: 79.
دیوید مالان: من شروع به شنیدن آن کردم.
79 در واقع صحیح است.
79 ، زیرا ما 64 و 8 و 4 و 2 و 1 داریم.
بنابراین اگر این یک 79 باشد ، ما نامه ASCII O را داریم.
بنابراین ما BO ، و سپس در آخر ، دور سوم را بدست آورده ایم.
برو
ما 01010111 داریم.
این چه شماره ای است؟
مخاطب: 87.
دیوید مالان: 87.
کدام حرف را هجی می کند؟
AUDIENCE: W.
دیوید مالان: دبلیو کدام کلمه را هجی می کند؟
مخاطب: کمان.
دیوید مالان: تعظیم نیست.
اگر می توانستید تعظیم کنید.
خوب
دور تشویق داوطلبان ما در اینجا.
[تشویق]
و از این طریق بیرون بیایید و به خود در یک توپ استرس CS50 کمک کنید.
از داوطلبان ما متشکرم
بنابراین این فقط به این معنی است که ما اکنون در مورد چگونگی نمایش اعداد از صفر به
بالا توافق کرده ایم.
ما در مورد چگونگی نمایش نامه ها توافق کرده ایم.
اما حداقل نامه هایی با استفاده از ASCII ، و در واقع ،
اینها چیزی بیش از دکوراسیون نیستند.
در واقع ، با پایان سخنرانی کمی چیزهای بی اهمیت است.
اگر به دنبال توپ استرس CS50 خود باشید ،
معلوم است که 64 لامپ در پای صحنه در اینجا وجود دارد.
اگر آنها را به 8 قطعه بایت یا مجرد- 8 بیتی
یا تک بایت تقسیم کنید ، یک کلمه هشت حرفی وجود دارد که
اتفاق می افتد امروز با استفاده از این نمودار ASCII در اینجا بیان شود.
So today's mystery is what exactly is that there word.
اما مطمئناً ، اگر فقط 8 بیت دارید ، فقط می توانید مانند 256 کاراکتر
نمایندگی کنید ، که به نظر می رسد برای انگلیسی بسیار زیاد است ، و در واقع ، این است.
صفر تا نه ، A تا B ، سرمایه و حروف
کوچک ، بزرگ و کوچک و همچنین نگارشی.
اما بسیاری از زبان های انسانی دیگر در
جهان وجود دارد که شخصیت های دیگری دارند.
به عنوان مثال ، ما فقط الفبای انگلیسی را که ممکن است در اینجا
در صفحه کلید انگلیسی ایالات متحده مشاهده کنیم ، نداریم.
ما شخصیت های برجسته ای داریم ، ما زبانهای مختلف آسیایی
حتی گلیف های دیگری نیز دارند.
ما به بیش از 256 کاراکتر ممکن احتیاج داریم.
و بنابراین امروزه رایانه ها فقط از 7 یا حتی 8 بیت استفاده نمی کنند.
آنها ممکن است از 8 بیت برای برخی از نامه ها مانند همه نامه های انگلیسی استفاده کنند.
آنها ممکن است از 16 بیت برای برخی از زبانهای دیگر استفاده کنند.
شاید حتی 24 یا 32 بیت.
و واقعیت جالب ، اگر 32 بیت
دارید- و ما بیش از این روی صحنه داریم.
If you've got 32 bits, you can actually represent
as many as 4 billion possible characters, which is quite a bit.
بدون هدف در نظر گرفته شده است.
بنابراین چه چیز دیگری می توانیم نمایندگی کنیم؟
خوب ، هدف این سیستم ، نه فقط ASCII ، بلکه
چیزی که به عنوان یونیکد شناخته می شود ، که یک استاندارد
جدیدتر است ، این است که با ASCII سازگار باشد.
بنابراین انسانها تمام این شماره های دیگر را به تنهایی ، 65 ، 66 ، 67 و غیره به جا
گذاشتند ، اما آنها مجموعه ای فوق العاده از بازنمایی ها را به
آن اضافه کردند که شاید 16 ، 24 یا 32 بیت باشد.
هدف این است که بتوانیم به صورت دیجیتالی به نمایندگی از همه زبانهای
انسانی ، گذشته ، حال و آینده و حتی از طریق تصاویر ،
مواردی مانند چهره های لبخند و مانند ، حتی افراد ، مکان ها ، چیزها و
احساسات که از زبان انسانی فراتر می رود.
و در حقیقت ، شانس در طی چند دقیقه یا ساعت گذشته وجود دارد ، بیشتر شما از
یک یا چند مورد از این تصاویر در اینجا استفاده کرده اید ، این تصاویر ، که به نظر
می رسد فقط شخصیت های روی صفحه کلید هستند.
You might have to hit a special button to pull up that form of the keyboard,
but these are just here characters.
و بنابراین ، این ایموجی ها به دلایل مختلفی
از محبوبیت منفجر شده اند ، که یکی از آنها خدای من است ، ما
با 4 میلیارد الگوی ممکن صفر و آنهایی که می خواهیم چه کار کنیم؟
ما می توانیم با آن سرگرم کننده باشیم و چیزهایی فراتر از زبان
های انگلیسی و انسانی را به تنهایی نشان دهیم.
اکنون ، به عنوان گذشته ، وقتی به یونیکد می
آید ، سالها پیش به طور استاندارد یونیکد معلوم می شود که این الگوی 32 صفر
و نمونه ها را فقط یکی از آن ایموجی ها نشان می دهد.
بنابراین ایموجی ها در اینجا تمایل به استفاده از بیت های حتی بیشتر دارند.
کسی می داند این تعداد اعشاری چیست؟
این یک تمرین ریاضی سرگرم کننده نیست.
این اسپویلر 4،036،991،106 عدد اعشاری است که در واقع ، از محبوب
ترین ، محبوب ترین ایموجی های جهان را نشان می دهد.
آیا کسی می خواهد حدس بزند که این شماره در اینجا چه چیزی را نشان می دهد؟
مخاطب: قلب.
دیوید مالان: قلب؟
قلب ها؟
نه ، اما در واقع این چهره به اصطلاح با اشک شادی است.
بنابراین شاید در مورد فرکانس ارسال شده با آن فکر کنید.
و حتی اگر بدیهی است که یک تصویر روی صفحه نمایش است ،
مطمئناً ، در واقع بیشتر شبیه یک قلم است ، زیرا در زیر
کاپوت ، در واقع فقط یک الگوی صفر و آن ها یا تعداد اعشاری
است که کامپیوتر در آن ذخیره می کند.
اما رایانه ، چه از سیستم عامل Mac یا Windows یا iOS یا Android ، می
داند که این الگوی را به عنوان این تصویر در اینجا نمایش دهید.
اما بسته به سخت افزار ممکن است تصاویر متفاوت به نظر برسند.
چرا؟
از آنجا که شرکت هایی مانند Google و Microsoft و Meta و سایر افراد
وجود دارند که هنرمندان خود را به عنوان کارمند
در کارمندان دارند و آن هنرمندان توضیحات
مانند چهره با اشک شادی را متفاوت تفسیر می کنند.
بنابراین کسانی از شما که دارای یک تلفن اندرویدی هستند ، در واقع چهره ای را با
اشک شادی می بینند که کمی شبیه به این است.
به عنوان مثال ، اگر تلگرام دارید ، روی تلفن خود نصب شده
است ، حتی از این نیز متحرک تر است.
این در اینجا ایموجی است که با استفاده از همان الگوی صفرها و نمونه ها.
بنابراین هنرمندان مختلف این موارد را در اینجا ایموجی ها به روش های مختلف ارائه
می دهند ، اما همه آنها در اینجا الگوهای هستند.
اکنون ، برای همه پاسخ های دیگر ، صرفه جویی در لحظه ای که لحظه ای قبل
فریاد زده شد ، این نوعی نمودار ابری از محبوب ترین
ایموجی ها از چند سال پیش در هر یونیکد است ، به موجب آن اندازه
ایموجی ها نشان دهنده محبوبیت نسبی آن است.
بنابراین قلب ، من در اینجا اینجا کار کردم
، در واقع یکی از محبوب ترین آنها است.
سوال؟
مخاطب: چرا ایموجی های خاصی [نامفهوم] ظاهر می شوند؟
دیوید مالان: اوه ، سوال واقعا خوب.
چرا ایموجی های خاصی در یک دستگاه یا دستگاه دیگر ظاهر نمی شوند؟
این بستگی به این دارد که نرم افزار اخیر است.
هر ساله انسانهای پشت کنسرسیوم یونیکد ایموجی های جدید
را منتشر می کنند.
این بدان معناست که آنها تصمیم می گیرند که این الگوی دیگر
نمایانگر این ایموجی های جدید باشد ، این الگوی دیگر نمایانگر این ایموجی های جدید است.
و مگر اینکه تلفن خود را ، لپ تاپ ، دسک
تاپ خود را به آخرین نرم افزار و تولید کننده آن دستگاه یا نرم
افزار نیز به روز کنید ، همچنین با
استخدام یک هنرمند برای ترسیم آن تصاویر در قلم های خود
، به سبک خود ، می خواهید فقط یک مربع سیاه خالی یا شاید
فقط یک قلب سیاه و سفید به جای چیزی رنگارنگ تر ببینید.
واقعاً فقط متغیرها ، زیرا ، به نظر می
رسد که قلم مناسب نصب نشده یا
واقعاً ، نسخه قدیمی آن از همان قلم نصب شده است.
اما این به یک نوع سنت سالانه تبدیل شده است که هر سال ایموجی های
جدید و بیشتر منتشر می شوند ، که از جمله دلایلی است که این به روزرسانی ها
حاوی بیشتر و بیشتر است.
آره؟
مخاطب: چگونه رنگ در بایت را نشان می دهید؟
دیوید مالان: این یک نماینده شگفت انگیز است.
چگونه رنگ بایت را نشان می دهید؟
Well, you use RGB, which happens to be, by coincidence, the next slide.
بنابراین بیایید دوباره ، دوباره یادآوری کنیم.
ما می دانیم که چگونه نامه ها را نشان دهیم.
ما می دانیم که چگونه اعداد را نشان دهیم.
ما حتی می توانیم نماینده ایموجی باشیم.
But those emoji technically on the screen
are, of course, composed of colors, like a whole bunch of yellow
for that there smiley face?
چگونه رایانه ها ، با استفاده از تنها صفرها و آن ها ، رنگ ها را نشان می دهند؟
خوب ، طبق کنوانسیون ، آنها به طور معمول از سیستمی استفاده می کنند که توسط مخفف
RGB نامیده می شود.
قرمز ، سبز ، آبی.
و این به این معنی است که یک رایانه ، برای نشان دادن یک نقطه واحد روی
صفحه- شاید این یکی ، این یکی ، تعدادی از بیت ها یا تعدادی بایت را
اختصاص دهد تا رنگ آن را نشان دهد ، نقطه آنها ، در غیر این صورت به عنوان
پیکسل شناخته می شود.
در واقع می توانید پیکسل ها را از طریق تلفن یا حتی در تلویزیون یا مانیتور خود مشاهده کنید.
اگر واقعاً نزدیک شوید ، به خصوص اگر این مانیتور قدیمی تر باشد ،
می توانید مربع های کوچک کوچک را ببینید.
هر یک از این تعداد تعدادی از بیت ها به دستگاه می گویند از چه رنگی استفاده می شود.
به طور خاص ، این دستگاه ها به طور معمول از سه عدد در کل ، سه بایت استفاده می کنند.
بنابراین می گویند 24 بیت در هر پیکسل.
و آنها این کار را می کنند.
اگر قرار بود یک نقطه واحد را با استفاده از این سه شماره ، فقط
با هدف در اینجا نمایندگی کنید ، این 72 ،
73 ، 33 است که در زمینه پیام متنی ، یک ایمیل ،
یک سند گوگل ، البته سلام ، از نظر متنی است.
چه می شود اگر یک کامپیوتر از همان
الگوی صفرها و آنهایی که همان الگوی رقم اعشاری است ،
استفاده کند تا رنگ روی صفحه را نشان دهد؟
که اگر با استفاده از فتوشاپ تصویری را باز می کنید ، آلمانی است.
بنابراین با استفاده از یک نرم افزار متفاوت
که در مورد رنگ ها و تصاویر می داند و نه فقط متن.
خوب ، این بدان معنی است که شما می خواهید آن نقطه
روی صفحه ، مقدار متوسط ​​قرمز ، مقدار متوسط
​​سبز و کمی آبی داشته باشد.
چرا می گویم متوسط ​​و کم؟
خوب ، باز هم ، اگر هر یک از این اعداد از 8 بیت یا 1 بایت استفاده می کنند ،
بالاترین چیزی که می توانیم حساب کنیم ، همانطور که کشف کردیم ، 255 بود.
بنابراین من به نوعی میانگین اینجا هستم.
بنابراین 72 در 255 به من مانند مقدار متوسط ​​قرمز احساس می شود.
33 احساس آبی نسبتاً کمی دارند.
اما اگر اکنون رایانه آن طول موج های نور را ترکیب می کند ، به
اصطلاح ، مقدار متوسط ​​قرمز ، متوسط
​​سبز ، کمی آبی ، آنچه شما می گیرید کد رنگ برای یک نقطه واحد است.
و آیا کسی می خواهد حدس بزند که این تقریباً چه رنگی را نشان می
دهد ، این سه بایت؟
مخاطب: سفید.
مخاطب: بنفش.
دیوید مالان: سفید نیست ، نه بنفش.
مخاطب: براون.
دیوید مالان: قهوه ای نیست.
مخاطب: زرد.
دیوید مالان: در واقع زرد ، پاسخ است.
بنابراین در یک پیکسل تقریباً این سایه از رنگ زرد را نشان می دهد.
به این معنی که ، اگر به هر یک از آن ایموجی ها نگاه کنیم ، که مجدداً با
الگوهای صفرها و آنهایی نشان داده می شود ، اما شما
و من به عنوان انسان آنها را به عنوان تصاویر روی صفحه می دانیم-
بگذارید واقعاً جلو بروم و زوم و بزرگنمایی کنیم و به یک
نمونه از این نمونه های صوتی بپردازیم.
و هنگامی که به اندازه کافی بزرگنمایی می کنید یا تلفن را به اندازه کافی به صورت خود
قرار می دهید ، در واقع می توانید تمام نقاط کوچک معروف
به پیکسل ، همه مربع های کوچک را ببینید.
و با توجه به اینکه بسیاری از این پیکسل ها زرد
هستند ، یعنی این الگوی سه بایت ، 72 ، 73 ، 33
، برای نشان دادن این پیکسل استفاده می شود.
3 بایت یکسان دیگر برای نشان دادن این پیکسل ، این یکی ، این یکی
و غیره استفاده می شود.
بنابراین اگر عکسهای دیجیتالی را از طریق تلفن یا
دوربین خود گرفته اید ، احتمالاً امروز از اینترنت و
سخت افزار آشنا هستید که یک عکس ، بسته به وضوح آن ، 1
مگابایت ، 10 مگابایت چیست؟
خوب ، مگابیت به معنای میلیون ها بایت است.
همه این بایت ها در داخل این عکسها یا این
تصاویر مورد نظر یا بارگیری قرار می گیرند؟
آنها با هر یک از پیکسل های تک روی صفحه مطابقت دارند.
حداقل از سه بایت استفاده می شود تا هر یک از این نقاط را نشان دهد.
گذشته از این ، کمی دروغ سفید است زیرا امروزه نرم افزار
فشرده سازی فانتزی وجود دارد که می تواند کمتر از بسیاری از بایت ها استفاده کند.
اما به طور کلی ، این جایی است که همه آن بایت ها ، آن میلیون ها بایت
از آنجا می آیند.
بنابراین چگونه این برای پاسخ به چگونگی نشان دادن رنگ ها است؟
ممنون
بنابراین اگر اکنون توافق کردیم که این راه و شاید دیگران برای
نشان دادن رنگ ها وجود داشته باشد ، خوب ، چگونه می
توانیم نه فقط تصاویر بلکه فیلم ها را نمایندگی کنیم؟
خوب ، فیلم ها یک بار در یک زمان یا فیلم ها ، تصاویر متحرک نامیده می شدند.
بنابراین تصاویر حرکت با حرکت.
چرا این است؟
خوب ، شبیه به رشد است.
اگر تا به حال با یکی از این کتابهای تصویری بازی کرده اید- و در واقع
، امروزه ممیزی ها وجود دارد که دوباره این محبوبیت ها را
ایجاد کرده است ، به همین دلیل شما یک دسته کامل از تصاویر را روی برگه های کاغذی دارید.
و اگر به اندازه کافی سریع از آنها عبور کنید ،
ذهن و چشمان انسان شما آن را به عنوان حرکت واقعی درک می کنند
، حتی اگر فقط در حال مشاهده تصویر ، تصویر ، تصویر ، تصویر ، تصویر ، تصویر هستید.
اما خیلی سریع است ، به نظر می رسد مانند حرکت.
این همه یک فیلم روی صفحه شماست.
این همه یک فیلم در تلویزیون شماست.
در واقع ، حرکت مداوم نیست.
شاید 30 فریم یا تصویر در ثانیه باشد ، شاید 24
فریم یا تصویر در ثانیه.
به این معنی که ما می دانیم چگونه اعداد را نشان دهیم ، می
دانیم چگونه نامه ها را نشان دهیم ، می دانیم چگونه
رنگ ها و در نتیجه تصاویر را نشان می دهیم.
اکنون ما به نوعی فیلم ها را به صورت رایگان دریافت می کنیم زیرا این فقط بیشتر است.
بیشتر و بیشتر از این الگوهای استفاده کنید.
چرا فیلم ها بسیار بزرگ هستند؟
چرا آنها برای بارگیری ، میلیاردها بایت گیگابایت می کنند؟
زیرا تصاویر بسیار زیادی وجود دارد.
30 برخی از تصاویر عجیب و غریب در هر ثانیه در این نوع فیلم ها.
و شاید در آخر ، فقط برای صعود چندرسانهای ما ،
چگونه می توانید صدا را نمایندگی کنید؟
شاید نوازندگان در اتاق باشند.
چگونه می توانید با استفاده از فقط صفر و آنهایی که می توانید چیزی به
اندازه موسیقی صوتی نشان دهید؟
چیزی آنالوگ به عنوان دیجیتال.
آره؟
مخاطب: بنابراین هر عدد با یک فرکانس مطابقت دارد.
دیوید مالان: بله.
بنابراین هر شماره ای که در رایانه ذخیره
می کنیم می تواند با یک فرکانس خاص مطابقت
داشته باشد ، که رابطه مستقیمی با صدا یا زمین یک یادداشت دارد.
به عنوان مثال ، در دنیای پیانو و بسیاری از سازهای دیگر ، شما
مانند A ، B ، C خود مانند A ، C خود ، ممکن است شما نیز آبشار و آپارتمان داشته باشید.
ما فقط می توانستیم موافقت کنیم ، مانند مردم ASCII که
سالها پیش انجام دادند تا نت موسیقی A را نمایندگی کنیم ، بیایید از این
الگوی ، یادداشت موسیقی A-Sharp استفاده کنیم ، بیایید از این الگوی و موارد دیگر استفاده کنیم.
اما شاید به تنهایی زمین یا فرکانس به تنهایی کافی نباشد.
شاید ما به این شماره احتیاج داشته باشیم ، اما
شاید یک شماره دوم برای حجم ، نوع معادل دیجیتالی چقدر
سخت است که به کلید روی پیانو ضربه می زنید.
شاید شماره سوم برای چه مدت کلید را پایین نگه دارید.
بنابراین شاید زمین و حجم و مدت زمان ، نوع RGB ، ما می توانیم از
سه بایت استفاده کنیم تا هر نت موسیقی را در برخی از قطعه ها نشان دهیم.
و اگر می خواستیم این ساز را که باید توسط کامپیوتر
پخش شود ، پیگیری کنیم تا آن موسیقی را صدا
کنیم ، خوب ، شاید این فقط یک بایت چهارم یا چیز دیگری باشد.
به این معنی که ، در پایان روز ، تمام آنچه ما
داریم این صفرها و مواردی هستند که باید این مشکل را برطرف کنیم.
بنابراین در حال حاضر ، این برای نمایش اطلاعات است.
ما شماره های خود را بدست آورده ایم ، نامه های خود را دریافت
کرده ایم ، رنگ ها و تصاویر ، فیلم های خود را به دست آورده ایم و اکنون صدا می کنیم.
در این صورت ، هر گونه سؤالی در مورد چگونگی رایانه ها ، همانطور که وعده داده شده است ، این
ورودی ها و خروجی ها را با استفاده از صفرهای فقط و موارد ارائه می دهند؟
بله ، وسط
مخاطب: رایانه آن را به عنوان ورودی می گیرد.
دیوید مالان: درست است.
بنابراین رایانه در پایان روز ، صفرها و آن ها به عنوان ورودی در نظر گرفته می
شود و در حال خروج صفرها و آنهایی است.
با این حال ، همانطور که در این کلاس می آموزیم ، با نوشتن
نرم افزار ، با نوشتن کد که آن صفرها و مواردی را درک می کند ، ما فقط
به معنای واقعی کلمه از صفر و مواردی لذت
خواهیم برد ، ما A ، B ، C را خواهیم دید ، رنگ ها را
خواهیم دید ، ویدیویی خواهیم دید ، تا زمانی که کد را برای تفسیر آن صفر و
موارد می نویسیم.
و در واقع ، شایان ذکر است که اکنون همان الگویی که من
برای مثال از آن استفاده می کنم ، 72 ، 73 ، 33 ، چگونه یک کامپیوتر می داند؟
آیا این پیام سلام است؟
آیا این رنگ زرد است؟
آیا این یک نقطه به تنهایی است؟
فقط به متن بستگی دارد.
به عبارت ساده تر ، اگر آن الگوی صفر و آنهایی را که دارای اکسل
یا یک برنامه ماشین حساب هستند باز می کنید ،
شانس این است که این نرم افزار این سه بایت را به عنوان شماره تعبیر می کند.
اگر با این حال ، شما همان الگوی را در یک برنامه پیام رسانی متنی ،
Google Docs ، Microsoft Word باز می کنید ،
همان الگوی به عنوان دنباله ای از حروف تعبیر می شود.
در عوض ، اگر فتوشاپ را باز کنید ، همان الگوی ،
احتمالاً یک نقطه واحد را مشاهده خواهید کرد که به نظر می رسد زرد است.
برعکس ، هنگامی که خودتان یک برنامه نویس یا حتی برنامه نویس بهتر هستید ،
قادر خواهید بود با کد بنویسید که چگونه می خواهید رایانه برای درمان
این الگوهای صفرها و نمونه ها باشد.
اساساً می توانید به رایانه بگویید ، از این برای ذخیره شماره یا نامه یا
رنگ یا چیز دیگری استفاده کنید.
این قدرتی است که خود برنامه نویس در پایان روز دارد.
س questions الات دیگر در مورد نمایش چیزها با بیت ها؟
نه؟
خوب
بنابراین ، در آخر ، پس از آن ، در این وسط این جعبه سیاه ، به اصطلاح
، نوعی سس مخفی است که مشکلات را حل می کند ، که این
ورودی ها را به خروجی ها تبدیل می کند ، آن مشکلات را به راه حل ها تبدیل می کند.
بنابراین الگوریتم چیست؟
این فقط دستورالعمل های گام به گام برای حل برخی از مشکلات است.
و در واقع ، من فکر می کنم برای اولین بار در CS50 که در
آنجا همان چیزی را از استاد برایان کرنیگان آموختیم ، فکر می کنم.
و همانطور که شانس آن را خواهد داشت ، فقط 25 مین دوره حضور من را در آنجا انجام دادیم که از سال 1996 برخی از فیلم
های ویدئویی را بیرون کشیدیم.
و بنابراین ، ما واقعاً خوش شانس هستیم که چند دقیقه اول CS50 را
بیش از 25 سال پیش که خودم آن را گرفتم.
اما درسهایی که در آن زمان ، مانند امروز ، اساساً یکسان هستند.
و آنچه در واقع مهم است این است که نه تنها خود را به درستی بیان کنیم ، بلکه
دقیقاً همانطور که امروز نیز بررسی خواهیم کرد.
این سپس استاد برایان کرنیگان است که سالها
پیش ما و همکلاسی های من و همکلاسی های من را با الگوریتم ها در واقع
، در کلاس ، تراش ریش خود را معرفی کرد.
اگر می توانستیم چراغ ها را برای برایان کم رنگ کنیم.
[پخش ویدیو]
- مورد دیگری که می خواهیم در این کلاس درباره آن صحبت
کنیم ، مفهوم یک الگوریتم است.
الگوریتم توصیف بسیار دقیقی از نحوه انجام کاری است.
و کلمه عملیاتی در آنجا دقیق است.
این باید بسیار ، بسیار ، بسیار دقیق باشد.
و کاری که من قصد دارم انجام دهم این است که من
می خواهم ریش خود را که از دست و پا زدن خارج شده است ، بریزم.
[تشویق]
و من چیزهای مختلفی را آوردم که ممکن است برای اصلاح ریش با آنها استفاده کند.
[خنده]
[تشویق]
[پایان پخش]
دیوید مالان: بنابراین کافی است که بگوییم ، من ریش زیادی ندارم.
اما من این فناوری دیگر را در اینجا دارم که یک بار به عنوان یک کتاب تلفن شناخته شده است.
و این کتابهای تلفنی البته اطلاعات زیادی در آنها دارند.
به طور خاص در حال ذخیره شماره ها و نامه ها است.
برای کسانی که ناآشنا هستند ، آنها نام انسان را از A تا Z در اینجا
به زبان انگلیسی ذخیره می کنند و در ارتباط با نام همه یک شماره است.
بنابراین حتی اگر هرگز از این نوع دستگاه استفاده نکرده اید
، معلوم است که تقریباً معادل مخاطبین یا برنامه کتاب آدرس
در تلفن iOS یا تلفن Android شما نیز هست.
چرا؟
زیرا اگر مخاطبین خود را بالا می برید ، البته ، برخی
از نام های آشنا را در اینجا می بینید که با نام یا نام خانوادگی الفبای شده است.
و اگر بر روی هر یک از این نام ها کلیک
کنید ، به شخصی که احتمالاً سعی در تماس با آن دارید می رسد.
در اینجا تصویر جان هاروارد است ، که شماره آن در اینجا به علاوه
1-949-468-2750 است که از آنها استقبال می کنید و در اوقات فراغت خود با آنها تماس می گیرید.
اما در اینجا جان هاروارد است که از طریق کتاب تلفن به صورت دیجیتالی بخشی است.
خوب ، به نظر می رسد که از نظر جسمی در کتاب تلفن ، ما
ممکن است از الگوریتم ، دستورالعمل های گام به گام
استفاده کنیم ، برای یافتن جان هاروارد به همان روشی که iOS ، Android
، Mac OS ، Windows یا سایر سیستم عامل ها از آن استفاده می کنند.
بنابراین من می توانم ، وقتی به دنبال جان هاروارد ، نام اول ، با شروع
J ، می توانم از ابتدای کتاب تلفن شروع کنم و
شروع به جستجوی صفحه به صفحه به صفحه برای جان هاروارد کنم.
و اگر او آنجاست ، می توانم تماس بگیرم.
این یک الگوریتم است.
در واقع گام به گام است ، اما این یک اشکال بود.
چند صفحه تبدیل شد.
اما آیا این الگوریتم صحیح است؟
گام به گام ، با فرض اینکه من توجه می کنم.
بنابراین بله ، اگر جان هاروارد در اینجا باشد ، من در
نهایت او را پیدا می کنم که به بخش J رسیدم.
اکنون ، این کمی خسته کننده است.
مدتی طول می کشد.
چند ده ، چند صد صفحه.
So maybe I could do things a little smarter from grade school, like 2, 4, 6,
8, 10, 12, 14, 16, and so forth, going twice as fast.
آیا این الگوریتم صحیح است؟
پس نه ، اما چرا؟
مخاطب: شما می توانید آن را از دست بدهید.
دیوید مالان: من می توانم دلم برای او تنگ شود ، درست است؟
من فقط با احتمال 50/50 می توانم بدشانس باشم ،
زیرا جان هاروارد می تواند بین دو صفحه ساندویچ شود.
اکنون ، این یک ضرر کامل نیست ، این الگوریتم.
شاید کاری که می توانم انجام دهم این است که اگر از بخش J به K
بروم ، می توانم حداقل یک صفحه را دو برابر کنم
تا مطمئن شوم که جان هاروارد را از دست نداده ام.
بنابراین من هنوز هم می توانم دو برابر سریع به علاوه یک قدم اضافی
بروم تا مطمئن شوم که من آشفتگی نکردم.
بنابراین الگوریتم اول ممکن است به همان
اندازه صفحات موجود در کتاب تلفن باشد.
بنابراین اگر این کتاب تلفنی هزار صفحه داشته باشد ، در بدترین حالت ، اگر
من به دنبال جان هاروارد نیستم ، اما کسی که نام او با Z شروع می
شود ، ممکن است هزار صفحه برای من در واقع به آنجا برسد.
الگوریتم دوم ، دو برابر سریع.
به معنای واقعی کلمه ، ممکن است 500 به علاوه یک قدم برای
رسیدن به آنجا طول بکشد زیرا من یک بار دو می روم ،
بنابراین تا زمانی که واقعاً آن اشکال را برطرف می کنم.
اما کاری که قبلاً در روز انجام می دادیم و آنچه
امروز تلفن شما انجام می دهد ، هرچند به صورت
دیجیتالی ، تقریباً به وسط کتاب تلفن می رود ، به پایین نگاه می کند و متوجه می شود
، اوه ، من به طور تصادفی در بخش M هستم ، بنابراین در نیمه راه از طریق کتاب تلفن.
اما اکنون درباره جان هاروارد چه می دانم؟
آیا او به سمت چپ است یا به سمت راست؟
بنابراین او بدیهی است که در سمت چپ است ، زیرا J قبل از M. می آید ، بنابراین
آنچه من می توانم به معنای واقعی کلمه انجام دهم و آنچه
رایانه شما به صورت تصویری انجام می دهد ، مشکل را به نصف پاره می کند ، نیمی از
مشکل را دور می کند ، و اکنون ما را با همان مشکل اساسی رها می کند ،
اما این نیمی از بزرگ است.
بنابراین من از هزار صفحه به طور ناگهانی به 500 صفحه رفته ام.
و این را با دو صفحه دیگر ، 999 ، 998 ، در مقابل 1000 صفحه ، 998 ، 996 ،
994 مقایسه کنید.
این هنوز کند است.
من فقط در یک مرحله از این الگوریتم از 1000 به 500 رفتم.
بعد چه کاری انجام دهم؟
من تقریباً به وسط اینجا می روم.
اوه ، من کمی خیلی دور رفتم.
من الان در بخش E هستم.
بنابراین آیا جان هاروارد در سمت چپ یا درست است؟
بنابراین او در سمت راست است.
بنابراین من می توانم دوباره مشکل را به نصف پاره کنم ، نیمه چپ را دور
بیندازم ، اکنون می دانم که جان هاروارد باید به صورت الفبایی در اینجا باشد.
و من می توانم با استفاده از آن اکتشافی در سمت چپ یا رفتن به راست ، این
مشکل را دوباره و دوباره تقسیم و تقسیم و تسخیر کنم.
و من جرات می گویم ، اگر این کار را به درستی
انجام دهم ، در نهایت با یک صفحه واحد که شماره جان هاروارد در واقع است ، باقی می
ماند.
یا شاید او اصلاً در کتاب تلفن نباشد.
بنابراین این الگوریتم سوم و نهایی چند مرحله حداکثر ممکن است انجام شود؟
هزار نیست
حتی 500 یا 501 نیست.
چند بار می توانید هزار صفحه را به نصف دوباره و دوباره و دوباره
و دوباره تقسیم کنید؟
مخاطب: من می خواهم نه بگویم.
دیوید مالان: بنابراین 9 ، 10.
بنابراین به طور معمول 10 بار ، بدهید یا بگیرید.
در آنجا کمی گرد وجود دارد زیرا این یک قدرت کامل از دو نیست ،
اما تقریباً 10 بار.
مانند این ، این اساساً بهتر از هر دو الگوریتم است زیرا من
از هزار صفحه به 500 تا 250 تا 125 و غیره می روم و به
معنای واقعی کلمه دوباره و دوباره مشکل را نصف می کنم.
بنابراین ما در واقع می توانیم این موضوع را حتی بیشتر از لحاظ گرافیکی قدردانی و ببینیم.
و این از جمله کارهایی است که بعداً در این اصطلاح انجام خواهیم
داد وقتی که ما نه تنها با نوشتن کد صحیح صحبت می کنیم
، بلکه کد شما به خوبی طراحی شده است؟
آیا از کد قبلی شما بهتر است؟
آیا این بهتر از کد شخص دیگری است؟
آیا بهتر از برخی از محصولات دیگر است؟
اگر بیشتر به الگوریتم ها و کیفیت آن فکر کرده اید ، ممکن است
زمان لازم برای حل مشکلات را به حداقل برسانید اما
به طور صحیح کمتر نیست.
بنابراین اگر ما یک طرح XY ساده در اینجا داشته باشیم ، در محور
y یا عمودی مقدار زمان برای حل در هر واحد
اندازه گیری ، ثانیه ، صفحات است ، اما می خواهید حساب کنید.
در محور افقی یا X ، اندازه مشکل اندازه
گیری شده در تعداد صفحات است.
بنابراین این به معنای صفحات صفر در کتاب تلفن است.
این به معنای صفحات زیادی در کتاب تلفن است.
این به معنای هیچ وقت برای حل نیست.
این به معنای زمان زیادی برای حل است.
پس از آن ، بین این سه الگوریتم رابطه چیست؟
خوب ، اولی در اصل یک خط مستقیم ، شیب یک است.
و اگر کتاب تلفن دارای صفحه N در آن است ، ما
شیب را در اینجا به عنوان 1 بیش از 1 برای الگوریتم با
الگوریتم اول ، صفحه چرخش به صفحه به صفحه توصیف خواهیم کرد.
به این معنی که اگر سال آینده یک صفحه دیگر به کتاب تلفن اضافه کنیم ،
الگوریتم اول قرار است یک قدم دیگر بردارد.
اما الگوریتم دوم قطعاً بهتر است.
قطعاً سریعتر است ، اما هنوز هم یک خط مستقیم است.
بنابراین به طور متوسط ​​تقریباً بیش از 2 مرحله طول خواهد کشید ،
زیرا شما فقط باید نیمی از کتاب تلفن
را طی کنید زیرا به طور همزمان دو
صفحه می روید ، به جای کل کتاب تلفن در
بدترین حالت ، اگر نام کسی Z باشد ، در کل هر صفحه را طی کنید.
بنابراین اگر واقعاً اینها را مقایسه کنیم- بگذارید فقط خطوط متراکم را بکشم.
فرض کنید این صفحات زیادی را در کتاب تلفن دارید.
اگر فقط این خط سفید عمودی را در اینجا ترسیم کنید
، با استفاده از الگوریتم اول ، این زمان را به رنگ قرمز می گذرانید ،
اما به معنای واقعی کلمه می خواهد نیمی از زمان را به
رنگ زرد برای الگوریتم دوم ببرد زیرا به معنای واقعی کلمه به
طور همزمان دو صفحه می روید.
اما الگوریتم سوم و آخر شکل اساساً متفاوت است.
در عوض چیزی شبیه به این به نظر می رسد.
به نظر می رسد که مسطح تر و مسطح تر و مسطح تر است.
همیشه در حال افزایش است.
هرگز کاملاً مسطح نمی شود.
اما بسیار آهسته تر به عنوان تابعی از اندازه کتاب تلفن رشد می کند.
و برای کسانی که لگاریتم های خود را به یاد می آورند
، این به عنوان پایه ورود به سیستم 2 از n توصیف می شود.
و در واقع ، این جایی است که ریاضیات از آنجا آمده است.
Log Base 2 از 1000 در کل تقریباً 10 است
، حتی اگر برای تأیید به یک ماشین حساب نیاز دارید.
اما این شکل اساساً متفاوت است.
چرا؟
خوب ، فرض کنید که کمبریج ، جایی که ما هستیم ، و آلستون ،
شهر در سراسر خیابان سال آینده ، دو کتاب تلفنی خود را با هم ترکیب می کند.
و آنها از هزار صفحه به یک کتاب تلفن با 2000 صفحه می روند.
الگوریتم اول قرار است به معنای واقعی کلمه دو برابر
مراحل یا صفحات انجام شود.
الگوریتم دوم قرار است نیمی از تعداد یا 50 ٪ بیشتر را به خود اختصاص
دهد زیرا شما به طور همزمان دو نفر می روید.
اما الگوریتم سوم به سختی ضرب و شتم را از دست می دهد.
چرا؟
از آنجا که اگر این هزار صفحه در اینجا باشد و 2،000 صفحه در
آنجا وجود داشته باشد ، فقط از شکل خط سبز
استنباط می شود ، در محور عمودی خیلی بالاتر از دو مورد دیگر نخواهد بود.
بنابراین به طور خاص تر ، اگر سال آینده یک کتاب تلفن 2،000 صفحه داشته
باشید ، چند مرحله دیگر شما را با استفاده از آن الگوریتم سوم و نهایی انجام می دهد؟
فقط یک ، زیرا شما یک کتاب تلفن 2،000 صفحه را به یک کتاب تلفن
1000 صفحه تقسیم و تسخیر خواهید کرد ، و سپس در داستان اصلی بازگشتید.
و این نوع قدرت الگوریتم های یادگیری است.
این قدرت یادگیری علوم کامپیوتر و یادگیری نحوه برنامه است ، این
است که بتوانیم داده های بزرگ را پیمایش کنیم.
چیزهای اندازه گوگل ، چیزهایی که اندازه مجموعه داده های آموزش هوش مصنوعی با
استفاده از الگوریتم های بهتر و بهتر ، هوشمندانه
تر است که سریعتر عمل می کنند ، و بنابراین نه
تنها باعث می شود نرم افزار رقابتی تر شود ،
بلکه باعث می شود در هنگام استفاده از آن نرم افزار ، برای افرادی مانند شما و
من مطلوب تر و مطلوب تر شود.
بنابراین ، هنگامی که نوبت به اجرای الگوریتم ها به عنوان
برنامه نویسان ، به عنوان دانشمندان رایانه است ، آنچه شما واقعاً انجام می دهید
این است که این الگوریتم ها را در نظر بگیرید ، که ممکن است به طور
مفهومی به زبان انگلیسی بیان شود ، اما واقعاً
فقط آنها را به کد می رساند ، خواه C یا C ++ یا Python یا R یا Ruby یا سایر
زبانهای موجود در جهان.
اما در حال حاضر ، بیایید در نظر بگیریم که چگونه ممکن است آن
الگوریتم را با استفاده از چیزی که به معنای واقعی کلمه هنوز انگلیسی است ، اما شبه کد اجرا کنیم.
چیزی که هنوز هم صحیح است ، اما دقیق و محدود ، طبق
توصیه استاد کرنیگان ، یعنی اینکه می
گویند از زبان انگلیسی خود استفاده کنید و فقط
منظورتان را بگویید اما بسیار دقیق بگویید.
هیچ راهی برای نوشتن شبه کد وجود ندارد.
این یک زبان رسمی نیست.
من فقط می خواهم مراحلی را که بطور شهودی انجام دادم تبدیل کنم تا
دستورالعمل های گام را به شرح زیر انجام دهم.
مرحله اول ، کاری که من انجام دادم این بود که کتاب تلفن را انتخاب کردم.
مرحله دوم ، کاری که من کردم تقریباً برای میانه کتاب تلفن
برای الگوریتم سوم باز بود.
مرحله سوم ، به صفحه نگاه کنید.
مرحله چهارم ، اگر شخص در صفحه باشد ، مرحله پنجم ، با شخص تماس بگیرید.
If that does not prove to be the case, step six,
else if the person is earlier in the book, then
open to the middle of the left half of the book and then go back to line three.
سپس ، در غیر این صورت اگر شخص بعداً در
کتاب باشد ، در وسط نیمه سمت راست کتاب باز است و دوباره به خط سه بروید.
در غیر این صورت ، یک پرونده چهارم و آخر وجود دارد.
اگر شخصی مانند جان هاروارد در صفحه نباشد ، زودتر نیست ، بعداً
نیست ، سناریوی چهارم که ما بهترین آنها را در نظر می گیریم چیست؟
او فقط آنجا نیست.
در غیر این صورت ما باید کاری خاص مانند ترک انجام دهیم.
اکنون ، به عنوان یک کنار ، همه افراد در این اتاق
احتمالاً یکی از این مشکلات پشتیبانی فنی احمقانه
را داشته اند که تلفن شما یا لپ تاپ یا رایانه دسک تاپ
شما فقط ناگهان را یخ می زند ، یا شاید بدون هیچ دلیلی به صورت خودجوش راه اندازی شود.
شانس این است که به این دلیل است که شما نیستید بلکه برخی دیگر از انسان ها اشتباه کرده اید.
آنها احتمالاً کدی را که در مایکروسافت یا اپل یا گوگل
یا جای دیگری کار می کرد ، نوشتند و در واقع پیش
بینی نکردند که ، اوه ، سناریوی چهارم وجود دارد که می
تواند در دنیای واقعی اتفاق بیفتد.
اما اگر هیچ کدی وجود ندارد که به رایانه بگوید در آن
سناریوی چهارم و آخر چه کاری انجام دهد ، چه
کسی می داند کامپیوتر چه کاری انجام می دهد؟
ممکن است به طور پیش فرض راه اندازی مجدد شود.
این ممکن است به طور پیش فرض یخ بزند.
این فقط اشاره ای به اشکالات است ، اشتباهات موجود در نرم افزار.
اما حتی اگر این فقط یک راه برای نوشتن این کد ، a.k.a.
pseudocode باشد ، برخی از ویژگی های برجسته وجود دارد
که امروز در آن استفاده خواهیم کرد.
یکی ، این افعال ، این اعمال وجود دارد.
و از این پس ، به عنوان دانشمندان مشتاق رایانه یا برنامه
نویسان ، ما قصد داریم با آنچه مخاطبان فنی بیشتر و بیشتر می کنند ، این
موارد را صدا کنیم.
اینها توابع هستند.
تابع یک عمل یا فعل است.
این مانند یک کار به اندازه نیش است که یک کامپیوتر می تواند برای شما انجام دهد.
سپس این موارد توابع موجود در این اینجا شبه کد هستند.
اما انواع دیگری از کد در اینجا وجود دارد.
این چیزها در اینجا وجود دارد.
اگر دیگر اگر چیز دیگری باشد.
این نمونه هایی از آنچه ما می خواهیم از آن استفاده کنیم شرط بندی می کنیم.
اینها نوعی چنگال ضرب المثل در جاده ای هستند که شاید شما از این طریق پیش بروید ،
شاید به این روش بروید ، اما تصمیم می گیرید که بر اساس یک سوال کدام راه را طی کنید.
سؤالاتی که از شما می پرسید همان چیزی است که ما از
لحاظ فنی عبارات بولی را به نام ریاضیدان بول بنا می کنیم.
یک بیان بولی یک سؤال با پاسخ بله یا خیر ، یک پاسخ
درست یا نادرست ، یک پاسخ سیاه یا سفید ، یک پاسخ یک یا صفر است.
دو امکان وجود دارد ، و اشاره ای به باینری در زیر وجود دارد.
یک بیان بولی به شما می گوید بله یا خیر ، باید
آن چنگال را در جاده پایین بیاورید.
توجه کنید که در اینجا مهم است که در نتیجه تورفتگی اهمیت دارد.
توجه کنید که در خط چهار وقتی برای اولین بار از من پرسید که آیا شخص در
صفحه سؤال است ، به همین ترتیب ، من فقط باید خط پنج را در هر
تورفتگی خود انجام دهم اگر جواب مثبت باشد
یا درست باشد ، من فقط باید در وسط نیمه چپ کتاب باز شوم و اگر شخص
زودتر در کتاب باشد ، به خط سه برگردم.
بنابراین تورفتگی در شبه کد و در بسیاری از زبانهای برنامه نویسی
از اهمیت منطقی برخوردار است.
این به شما می گوید که آیا کارها را انجام دهید یا نه.
اما ساختاری دیگر در اینجا وجود دارد.
برگرد به
به عقب برگردید ، که به معنای واقعی کلمه باعث می شود من به خط سه برگردم ،
به طور بالقوه دوباره و دوباره و دوباره ، ایجاد نوعی چرخه
یا آنچه به جای آن به طور معمول یک حلقه می نامیم.
بنابراین حتی در این الگوریتم دنیای واقعی نسبتاً
ساده ، ما این چهار ویژگی اساسی اکثر برنامه های رایانه ای را
داریم که در این کلاس می نویسیم ، و شما
ممکن است فراتر از این کلاس بنویسید ، که اکنون برخی از اصطلاحات فنی
برای توصیف آنها داریم.
اما نکته قابل توجه این است که خط 8 و خط 11 ، حتی اگر
آنها می گویند به خط سه برگردید ، به خط سه برگردید ، ممکن است فکر کنید
که خطر آنچه را که ما به عنوان یک حلقه نامحدود
خواهیم نامید ، در آنجا به معنای واقعی کلمه برای همیشه در یک حلقه
گیر می کنید ، که به نظر نمی رسد مانند یک چیز خوب نیست ، اگر در
بعضی مواقع می خواهید رایانه خود را خاموش کنید ، حتی اگر هنوز هم کار می کند.
اما اینها حلقه های بی نهایت را القا نمی کنند.
چرا؟
چه اتفاقی می افتد در این الگوریتم خاص هر بار که به خط سه
برگردیم که تضمین می کند در نهایت ما دوباره به خط سه باز می گردیم؟
مخاطب: شخص در صفحه است ، شما آن را صدا می کنید.
دیوید مالان: دقیقاً.
اگر شخص در صفحه باشد ، ما با آنها تماس خواهیم گرفت یا کنار خواهیم رفت.
اما مهمتر از همه ، زیرا ما همچنان مشکل را تقسیم و فتح می کنیم ، در
این حالت ، داشتن کتاب تلفن ، داشتن کتاب تلفن ، سرانجام
می خواهیم کتاب تلفن را تمام کنیم ، در این صورت ، در واقع ، جان
هاروارد یا در آن صفحه است یا نه و ما تماس خواهیم گرفت یا
به جای آن کنار خواهیم رفت.
بنابراین به موقع خواهیم دید.
و در واقع ، به من اجازه دهید قول بدهم.
شانس در بعضی مواقع است که شما کدی را می نویسید
که به نظر می رسد کنترل رایانه را برای شما کنترل می کند ،
جایی که این کار را انجام می دهد ، کاری انجام می دهد ، کاری انجام
می دهد و به معنای واقعی کلمه دیگر به شما پاسخ نمی دهد.
این فقط به دلیل اشتباه است ، به اصطلاح
اشکالی که خودتان به طور تصادفی به کد خود اضافه کرده اید.
اما ما راه هایی برای خاتمه آن یا شکستن آن شرایط به شما نشان خواهیم داد.
و در واقع ، کاری که ما فقط در کمی بعد از استراحت
برای سخنرانی امروز انجام خواهیم داد ، این است که نه فقط این مفاهیم ، بلکه
برخی از راه هایی که می توانید از آنها برای حل مشکلات واقعی و
بسیار بصری و صوتی استفاده کنید.
اما در حال حاضر ، بیایید حداقل آن را به چیزی
که در ماه های اخیر بسیار آلمانی بوده است ، یعنی چند سال گذشته
، یعنی هوش مصنوعی ، که موضوعی است که در پایان دوره
به آن باز خواهیم گشت ، وصل کنیم ،
همچنین به شما این حس را می دهیم که ارتباط با
آنچه همه در دنیای AI صحبت کرده اند و چه
چیزی است که ما می خواهیم چند هفته دیگر را با نوشتن کد بگذرانیم.
اگر می خواهید به عنوان مثال سعی کنید چیزی مانند یک ربات چت را پیاده
سازی کنید ، فقط به سؤالات پاسخ می دهد و با شما مکالمه ای
دارد ، می توانید این کار را با استفاده از PseudoCode انجام دهید ، و
همانطور که به زودی خواهیم دید ، می توانید از C ، Python ، هر تعداد دیگر از زبان
استفاده کنید.
این شبه کد ممکن است هنگام اجرای یک ربات چت به این شکل باشد.
اگر دانش آموز به شما سلام می گوید ، می توانید
به چت ربات بگویید.
و تورفتگی ، طبق قبلی ، دلالت بر این است که این مشروط است.
در غیر این صورت اگر دانش آموز از شما خداحافظی کند ، با دانش آموز خداحافظی کنید.
در غیر این صورت اگر دانش آموز از شما سؤال کند که چگونه هستید ، بگویید که خوب هستید.
بنابراین شما فقط می توانید بعد از سؤال سؤال را پس از سؤال
مطرح کنید و فقط همه این امکانات مشروط را برطرف کنید.
اما همه چیز به سرعت تشدید می شود ، به
خصوص با ابزارهای امروز مانند چتپ.
آیا ما واقعاً می خواهیم به عنوان برنامه نویسان برای نوشتن
شرط دیگری مانند دیگری ، اگر دانش آموز می پرسد چرا 111 به صورت باینری 7 در
اعشاری است- مانند ، این نوع نکات در مورد ،
خدای من ، تعداد نامحدودی از چیزهایی وجود دارد
که این انسان می تواند از ربات چت بپرسد.
آیا ما واقعاً باید تعداد نامحدودی از شرط ها را بنویسیم؟
این فقط امکان پذیر نیست.
مانند ، زمان کافی در روز وجود
ندارد ، خطوط کد کافی در دسترس نیست.
مطمئناً هوش مصنوعی باید به جای آن بتواند برخی از این
موارد را بفهمد.
و در واقع ، اینگونه نیست که شما AI را پیاده سازی می
کنید ، بلکه نحوه اجرای یک هوش مصنوعی مانند ربات چت این
است که شما معمولاً آن را بر اساس داده های زیادی آموزش می دهید.
شما به آن تعداد زیادی ورودی ، ورودی های زیادی ، داده های
آموزشی می دهید و به شما اجازه می دهد تا در پاسخ به سؤالات خاص ، چه چیزی را باید بگوید.
و به احتمال زیاد ، آمار زیادی ، در غیر این
صورت به عنوان مدلهای بزرگ زبان شناخته می شود ، که اگر واقعاً
زیر کاپوت نگاه کنیم ، به طور معمول با شبکه های عصبی که از دنیای زیست
شناسی الهام گرفته شده است ، اجرا می شود ، از این رو همه ما
انسانها داریم که همه این نورونها را منتقل می
کنند که به گونه ای منتقل می شود که مغز من به دست من می گوید تا
این راه را حرکت دهد ، این روش و این روش دیگر.
بنابراین ، آنچه دانشمندان رایانه در طی سالهای گذشته
انجام داده اند ، در حال اجرا در نرم افزارهای با استفاده از صفر
و آنهایی که به معنای واقعی کلمه ، نمودارها یا
شبکه ها ، شبکه های عصبی هستند ، این چیزی شبیه به این است ، که در آن هر یک از
محافل یک نورون را نشان می دهد ، هر یک از فلش ها
نشان دهنده مسیری بین آنها است و به عنوان کالاهای
زیادی مانند همه داده ها مانند همه اینترنت ، همه ویکیاپدیا ، همه
ویکیاپدیا را فراهم می کند.
و سپس هدف این شبکه عصبی ، طبق این نورون نهایی نهایی
در اینجا ، تولید پاسخی به یک سؤال است.
شاید این ساده باشد ، بله ، نه ، یا شاید چیزی شبیه به پاسخ به سوال
111 باشد یا اینکه شما یا خداحافظی یا سلام یا موارد مشابه هستید.
و آنچه این شبکه های عصبی انجام می دهند استفاده از آمار و
احتمال است و سعی می کنید از نظر احتمالی احتمالی به
این سؤال که پرسیده شده است پاسخ دهید و واقعاً امیدواریم که صحیح باشد.
هیچ برنامه نویس در OpenAI یا Google یا
Microsoft وجود ندارد که سعی در پیش بینی هر یک از این سؤالاتی که ممکن است
از آنها بپرسیم ، نه تنها به زبان انگلیسی بلکه به زبان های دیگر نیز پیش بینی کند.
بنابراین ممکن است تعجب کنید که چرا این اردک 8 پا روی صحنه وجود دارد.
بنابراین شخصیتی که هوش مصنوعی CS50 در آن قرار می گیرد ، در واقع یک اردک
لاستیکی است ، زیرا در محافل برنامه نویسی معلوم
می شود- و این مدت طولانی قبل از CS50
صادق است- اغلب به دانش آموزان و برنامه نویسان مشتاق توصیه می شود که
شما به معنای واقعی کلمه یک اردک لاستیکی فیزیکی روی میز خود نگه دارید.
این ایده ، در غیاب یک دوست ، عضو خانواده ، همکار ، TA که
می تواند به سؤالات فنی برای شما پاسخ دهد ، اگر شبانه در
اتاق خود در Mather هستید ، می توانید با اردک صحبت کنید ، شاید در
را بسته و از اردک بپرسید ، و یا مهمتر از همه
، با اردک صحبت کنید که چه سردرگمی دارید.
و فقط عمل صحبت کردن از طریق مشکل ، توضیح
منطقی آنچه را که می خواهید انجام دهید ، واقعاً چه کاری انجام می
دهید و در واقع چه خطایی است ، به طور
مداوم ، آن نوع لامپ ضرب المثل خاموش می شود و شما می فهمید ، اوه ، من یک احمق هستم.
من به قول خودم می شنوم که در آنجا وحشت زده ام.
و حتی اگر این اردک هرگز به شما چیزی نخواهد گفت ، به تنهایی ، اشکال
زدایی اردک لاستیکی یا اردک لاستیکی ، تمایل به یک روش برنامه نویسی
ارزشمند دارد ، آن را باور کنید یا نه.
اما به لطف این مدل های بزرگ زبان ،
ما نه تنها اردک های فیزیکی بلکه مجازی نیز داریم.
و بنابراین در دسترس شما در این کلاس خواهد بود نه ابزاری مانند
چتگپت و موارد مشابه ، که از طریق سیاست ، مجاز نیستند.
استفاده از Chatgpt و موارد مشابه منطقی نیست.
اما شما مجاز به استفاده از ابزارهای مبتنی بر هوش مصنوعی CS50
هستید ، که شبیه همان ابزارها است ، اما چیزی در مورد CS50 می دانید
و آرزو می کنید که شبیه به یک همکار خوب تدریس باشد که شما را به
سمت راه حل ها هدایت می کند و در خلاف تحویل چیزی آشکار است.
بنابراین این ابزاری است که در طول دوره به معنای واقعی
کلمه این URL در دسترس خواهد بود.
CS50.ai.
همچنین در محیط برنامه نویسی که به زودی با آنها ملاقات خواهید کرد
، که به آن Visual Studio Code گفته می شود ، یک نسخه مبتنی بر ابر است.
اردک در آن محیط و همچنین هر از گاهی روی صحنه زندگی خواهد کرد ، یعنی می گویند
ما نه تنها در مورد آن صحبت خواهیم کرد بلکه در طول دوره از
این چیز معروف به هوش مصنوعی استفاده خواهیم کرد.
اما این در نهایت کد است که ما می خواهیم هفته آینده نوشتن را شروع کنیم.
و متأسفانه ، این کد در اینجا به زبانی به
نام C. نوشته شده است. این اساساً برنامه ای است که من در حدود
25 سال پیش دو امتیاز از دست دادم.
به نظر می رسد کاملاً رمزنگاری شده است.
به همین دلیل امروز آنچه ما روی آن تمرکز خواهیم کرد این نیست که این کد به نظر
می رسد ، و نه صفرهای و مواردی که آن کد به آن تبدیل می شود تا رایانه شما بتواند
به عنوان ورودی آنچه را که می خواهید انجام دهد درک کند.
ما قصد داریم روی تجسم بسیار بصری این موضوع تمرکز کنیم.
اما من می دانم که تاکنون این اتفاق زیادی بوده است.
بنابراین بیایید پیش برویم و پنج دقیقه استراحت در اینجا انجام
دهیم و وقتی در پنج باز می گردیم ، برنامه نویسی واقعی را انجام خواهیم داد.
بنابراین شما را در پنج می بینیم.
خوب
So it's now time to solve with actual code some actual problems,
albeit in a fun and visual and audio way.
اما به یاد بیاورید که جایی که ما از آنجا خارج شدیم این بود.
از هفته آینده ، شما می نویسید که در نهایت به نظر می رسد ، اما
خوشبختانه ، شما در حال نوشتن صفرها و افراد نیستید
و هیچ شخص عادی ، خودم شامل آن نیست ،
نمی توانید درک کنید که همه این صفرها و موارد در یک نگاه هستند.
ما می توانیم مقداری کاغذ ، مداد را بیرون بیاوریم و
احتمالاً آن را بسیار خسته کننده بفهمیم.
اما این دقیقاً نکته است.
رایانه ها فقط این مطالب را درک می کنند ، اما آنچه ما به عنوان برنامه
نویسان امروز و بعد از آن شروع به نوشتن خواهیم کرد ، کد در سطح بالاتری است.
و در واقع ، این اتفاق می
افتد- این در علوم کامپیوتر مکرر خواهد بود که
در آن سطوح مختلف انتزاعی که ما در آن فعالیت می کنیم وجود دارد.
و پایین ترین سطح ، ظریف ترین ریزه کاری ، مانند صفرها و آنهایی
است که کامپیوتر می فهمند.
این در این کلاس برای صفر و آنهایی است.
امیدوارم حداقل ذهن خود را به این نتیجه برسانید
که چرا از صفر و موارد می توان در سه گانه و به
عنوان بایت استفاده کرد تا تعداد بالاتر و بالاتر را نشان دهد.
اما بیایید اکنون موافقت کنیم که رایانه ها می توانند این کار را انجام دهند.
بیایید از آن جزئیات دور شویم و روی
زبانهای سطح بالاتر از صفرها و زبان ها تمرکز کنیم ، یعنی زبانی مانند این.
بنابراین این نمونه ای از اولین زبان برنامه
نویسی است که من در روز یاد گرفتم که طبق آن تکالیف به زبانی به
نام C.
این یک زبان قدیمی تر است ، اما امروزه یکی از محبوب ترین
زبان ها به زبان های همه جانبه است زیرا بسیار سریع
است و به خصوص در ساخت سریع دستگاه ها بسیار خوب است.
برای ما از نظر آموزشی ، ارزش C این
نیست که شما احتمالاً در دره سیلیکون و سایر مشاغل
دیگر از خود استفاده می کنید ، اما به این دلیل که
قرار است یک پایه مفهومی را در بالای آن ارائه دهیم ، ما
زبانهای دیگری را معرفی می کنیم ، مانند پایتون ، که جدیدتر و
بهبود یافته است ، بنابراین به شما می دهد که با استفاده
از روزهای دیگر ، به شما امکان بیشتری می دهد و بیشتر از جعبه ها می پردازیم.
بنابراین در پایان روز ، به دلیل درک
اساسی خود از زبانی مانند C ، باید
زبانهایی مانند پایتون و جاوا اسکریپت و SQL را بهتر درک کنید.
اما این برای روز اول خیلی زیاد است.
بسیاری از شما فکر خواهید کرد که این برای هفته دوم خیلی زیاد است.
اما در واقع ، C واقعاً فقط به نوعی
ترسناک به نظر می رسد زیرا همه این نگارشی و نحو خسته ، نیمه
رنگ ، پرانتز ، نقل قول های مضاعف ، بریس های مجعد و موارد مشابه.
و من موافقم
این از نظر فکری غیرقابل علاقه است ، و بسیاری از چالش ها در اوایل
هنگام یادگیری برنامه نویسی این است که شما فقط حافظه عضلانی ندارید
که من یا برخی از یاران تدریس ممکن است برای دانستن
اینکه چه نمادی باید در کجا باشد.
اما این با گذشت زمان و تمرین می آید ، من آن را تضمین می کنم.
با این حال ، آنچه ما برای امروز انجام خواهیم داد ،
این است که فقط همه جزئیات فکری را دور بیندازیم و واقعاً روی ایده ها تمرکز کنیم.
و برخی از شما ممکن است در منطقه راحتی خود
در اینجا باشید زیرا اگر در مدرسه راهنمایی
با یک زبان برنامه نویسی به نام Scratch بازی می کردید ،
احتمالاً در آن زمان فقط برای تفریح ​​در کلاس یا خارج از کلاس ، ساخت بازی ها ،
انیمیشن ها ، هنر تعاملی استفاده می کردید.
آنچه شما احتمالاً از آن استفاده نکرده اید ، حداقل در دوره راهنمایی ،
این بود که خودشان زبان های برنامه نویسی را مورد بررسی و کشف قرار دهید.
اما آنچه در مورد Scratch جالب است ، این زبان برنامه نویسی گرافیکی از پایین خیابان
در MIT است ، جایی که چند سال پیش اختراع شده است ، این است که شما نمی توانید با استفاده
از صفحه کلید خود به خودی خود برنامه ریزی کنید ، بلکه با
کشیدن و رها کردن قطعات پازل ، که در غیر این صورت به عنوان بلوک شناخته می شود ، در
غیر این صورت با هم چسباند ، اگر منطقی باشد که این کار را انجام دهد.
و آنچه شما مجبور به مقابله با آن نخواهید بود ، پرانتز و نقل قول
های مضاعف و نیمه ها و همه اینها ، حداقل تا هفته آینده است.
اما نکته خوب در مورد خراش این است که بعد از این
هفته و بعد از به اصطلاح مشکل صفر ،
اولین تکلیف که در آن از ابتدا استفاده
خواهید کرد ، یک مدل ذهنی خواهید داشت که از طریق آن می
توانید همه نحو های بعدی را نیز آسان تر کنید.
بنابراین بیایید ببینیم که چگونه می توانیم ابتدا با ساده
ترین برنامه ها برنامه نویسی را در ابتدا شروع کنیم.
شما می توانید این کار را در Scratch.mit.edu انجام دهید.
شما در حال حاضر نیازی به این کار ندارید.
Set Set Zero شما را در تمام این مراحل طی می کند.
اما کاری که من در اینجا انجام داده ام در Scratch.mit.edu ، دقیقاً صفحه وب
پیش فرض موجود در آن باز شده است.
این بعد از کلیک بر روی دکمه ایجاد در
خراش است که به من امکان می دهد اولین برنامه خود را ایجاد کنم.
اما اول ، یک تور از رابط کاربری در
اینجا ، و آنچه در نهایت در دسترس شما است.
خوب ، در محیط خراش ، چند
منطقه مختلف صفحه را خواهیم دید.
یکی ، ما این پالت قطعات پازل را در سمت چپ داریم.
رنگهای آبی مربوط به حرکت هستند ، رنگهای بنفش مربوط به ظاهر
هستند ، رنگهای صورتی مربوط به صدا و غیره هستند.
بنابراین رنگ بلوک ها تقریباً تقریباً طبقه بندی می
کنند که هدف از آن بلوک در زندگی است.
ما می خواهیم با کشیدن و رها کردن آنها از چپ به راست ، از آن
قطعات پازل استفاده کنیم.
در سمت راست در اینجا ، در وسط صفحه جایی
است که می خواهم برنامه های واقعی خود را بنویسم.
این جایی است که من این قطعات پازل را می کشم و رها می کنم ،
آنها را به هم قفل می کنم و در واقع کد خود را می نویسم.
What am I going to be coding?
خوب ، من قصد دارم یک یا چند اسپری را کنترل کنم.
Much like in the world of games are familiar, a sprite is like a character
that you might see on the screen.
شخصیت پیش فرض در دنیای خراش ، در
واقع گربه ای است که به این شکل است.
و اگر در این حالت ، من فقط یک گربه
دارم ، می توانم آن گربه را در دنیای کوچک خود در بالا درست با حرکت
دادن گربه به سمت بالا ، پایین ، چپ ، راست
، چرخش در اطراف یا انجام کارهای دیگر انجام دهم.
اما اگر می خواهید یک سگ یا پرنده یا هر
تعداد شخصیت سفارشی دیگر را معرفی کنید ، فقط اسپری های بیشتری
اضافه می کنید و آنها جای خود را در همان جهان می گیرند.
در مورد چگونگی فکر کردن در مورد حرکت در این
جهان ، در واقع بسیار آشنا است ، حتی اگر
برای یک لحظه کمی عددی پیدا کند.
اگر خراش در حال حاضر در وسط صفحه قرار دارد ، اگر به X ،
Y-Coordinates یا طول جغرافیایی فکر می کنید ، گربه در 0 ، 0 است.
اگر گربه را تا تمام راه حرکت دهید ، این هنوز x برابر با 0 خواهد بود
، اما این 180 خواهد بود.
180 چیست؟
180 پیکسل به صورت عمودی یا نقاط روی صفحه.
این 180 پیکسل منفی روی صفحه در پایین است.
در مقابل ، اگر به چپ و راست بروید ، ممکن است مقدار X شما تغییر کند.
منفی 240 ، اما y 0 است ، یا مثبت 240 و y نیز 0 است.
اما بیشتر اوقات نیازی به دانستن یا مراقبت
از مختصات پیکسل گربه نیست.
به احتمال زیاد برنامه نویس این است که آیا می خواهید
گربه نسبتاً به بالا ، پایین ، چپ یا راست برود
و به MIT ریاضیات حرکت این چیز را در بیشتر
موارد تشخیص دهد.
خوب
بنابراین بیایید پیش برویم و اولین برنامه ها را با انجام
کاری بسیار ساده معرفی کنیم ، همانطور که در C در آنجا انجام دادیم ، اما کمی ساده
تر با نوشتن کد به شرح زیر است.
من قصد دارم به Scratch.mit.edu برگردم.
من قبلاً روی دکمه ایجاد کلیک کردم.
و اگر بر روی دسته زرد بلوک ها در سمت چپ کلیک کنم- و من
زوم می کنم- ما یک دسته کامل از قطعات پازل زرد را خواهیم دید.
و احتمالاً رایج ترین موردی که برای نوشتن کد
در ابتدا برای این هفته اول استفاده خواهید کرد ، به معنای واقعی کلمه
هنگام کلیک بر روی پرچم سبز است.
چرا؟
خوب ، اگر به دنیای گربه در سمت راست برگردیم ، توجه داشته
باشید که بالای دنیای مستطیل گربه گربه ، نه
تنها یک پرچم سبز برای شروع وجود دارد ، بلکه
یک علامت توقف قرمز برای توقف نیز وجود دارد.
بنابراین بیایید این کار را انجام دهیم.
بگذارید جلو بروم و کلیک کنید و بکشید.
هنگامی که پرچم سبز در هر نقطه از وسط کلیک کرد و رها شد.
و اکنون می خواهم به ظاهر بروم ، و به نظر می
رسد که یک دسته کامل از قطعات پازل بنفش در اینجا وجود دارد.
من قصد دارم چیزی ساده را انتخاب کنم مثل سلام سلام ، آن را بکشید.
و توجه داشته باشید اگر من به اندازه کافی
نزدیک باشم ، می خواهد به طور مغناطیسی با هم بچرخد.
بنابراین من فقط این کار را می کنم و این کار را انجام می دهد.
این واقعیت که این بیضی سفید با متن وجود
دارد به معنای ورودی این است ، مثلاً قطعه پازل.
من به معنای واقعی کلمه می توانم اگر
بخواهم متعارف تر سلام کنم ، جهان را تغییر دهم.
که در واقع ، به گفته لور ، اولین برنامه ای بود که در C نوشته
شده بود ، و امروزه به هر زبانی ، از جمله در کتاب برایان کرنیگان.
بنابراین سلام جهان به طور کلی اولین برنامه ای
است که بیشتر برنامه نویس ابتدا می نویسد.
بنابراین این به عنوان برنامه ها انجام می شود.
بگذارید جلو بروم و از اینجا بزرگنمایی کنم.
بگذارید به سمت راست بروم و روی پرچم سبز کلیک کنم ، و تا حدودی هیجان انگیز ،
شاید به طرز حیرت انگیزی ، اکنون برنامه ای را نوشتیم که کاملاً به سادگی
می گوید سلام جهانی روی صفحه.
حال بیایید فقط یک لحظه این را کمی فنی تر کنیم.
این قطعه پازل اینجا چیست ، همانطور که من آن را صدا می کنم؟
این در واقع یک مشابه
است- این یک تجسم یکی از ایده های قبل از شبه ما است.
آخرین بار آن اقدامات و افعال را در شبه کد من چه خوانده ایم؟
مخاطب: [نامفهوم].
دیوید مالان: توابع.
درست است
بنابراین این قطعات پازل بنفش در اینجا واقعاً کارکردهایی هستند
و برخی از کارکردها ، همانطور که می بینیم ، مانند سلام کاما جهان ورودی می گیرند.
از این گذشته ، چگونه Scratch می داند چه بگوید؟
شما باید گربه را در اختیار گربه قرار دهید ، به این
معنی که توابع در واقع می توانند ورودی هایی مانند این را بگیرند.
در این حالت یک ورودی ، اما ما فرصت هایی برای
عبور از ورودی بیشتر نیز خواهیم دید.
What the cat is doing though, visually on the screen here at top right,
is what's generally called a side effect.
گاهی اوقات وقتی یک عملکرد را صدا می کنید ، از نظر بصری کاری انجام می دهد.
و در این حالت ، شما به معنای واقعی کلمه حباب گفتار کارتونی ،
سلام جهان را می بینید.
این عوارض جانبی این عملکرد است.
بنابراین اگر اکنون می خواهیم این موضوع را به دنیای ورودی ها و خروجی
های خود نقشه برداری کنیم و ببینیم این عوارض جانبی کجاست ،
این الگوی من در ابتدای کلاس است که علوم کامپیوتر به طور خلاصه ارائه شده است
و چارچوبی خواهد بود که ما به معنای واقعی
کلمه در کل کلاس استفاده می کنیم ، مهم
نیست که چقدر- مهم نیست که زبان ها به طور خاص تکامل می یابند.
بنابراین ورودی این برنامه خاص چیست؟
خوب ، این بیضی سفید ، سلام جهان ورودی من است.
الگوریتم ، دستورالعمل های مرحله به مرحله برای حل برخی از
مشکل ، به صورت کد اجرا می شود ، این زبان با
نام Scratch توسط این قطعه پازل بنفش.
و خروجی آن عملکرد ، با توجه به این ورودی ، عارضه
جانبی است که به موجب آن گربه واقعاً سلام جهان را از نظر بصری روی
صفحه نمایش در آن حباب گفتار می گوید.
بنابراین دقیقاً همان پارادایم که امروز با آن شروع کردیم ، حاکی از
آن است که دقیقاً این گربه در اینجا چگونه کار می کند.
خوب ، بیایید واقعاً به این برنامه
برگردیم و آن را کمی جالب تر از این کنیم.
بگذارید جلو بروم و روی علامت Red Stop کلیک کنم.
و بگذارید در واقع از یک نوع متفاوت از قطعه پازل استفاده کنم ، عملکرد
دیگری که کاری متفاوت انجام می دهد.
اول ، من قصد دارم از شر بلوک خلاص شوم.
بنابراین می خواهم نه تنها آن را از بین
ببرد ، بلکه می خواهم آن را در هر نقطه سمت چپ بکشم و
فقط رها کنم و خود را به طور خودکار حذف می کند.
یا می توانم کلیک راست یا کنترل را راست کنم ، و از منوی
کوچک نیز می توانم به صراحت بگویم حذف.
و کاری که اکنون می خواهم انجام دهم ، سنجش است ،
که یک سایه آبی روشن از قطعه پازل است- یک دسته کامل در اینجا وجود دارد ،
اما من قصد دارم روی این یکی تمرکز کنم.
چیزی بپرسید و صبر کنید.
و متن پیش فرض این است که نام شما چیست؟
و این خوب است
اما از آنجا که این یک بیضی سفید است ، اگر
می خواستم سوال را تغییر دهم ، می توان آن را به صورت دستی تغییر داد.
من قصد دارم آن را به اینجا بکشم.
قرار است به طور مغناطیسی با هم ضربه بزند.
و من با این سوال خوب هستم.
اما می خواهم با جواب چه بگویم؟
خوب ، بیایید پیش برویم و این کار را انجام دهیم.
دوباره می توانم به نظر برسم.
من می توانم یک بلوک دیگر را بگیرم ، اجازه دهید آن را
به هم بزنم ، و می توانم چیزی شبیه ، سلام ، دیوید.
اما این اولین اشکال بسیاری است که من می سازم ،
عمداً یا در غیر این صورت.
بگذارید روی پرچم سبز کلیک کنم.
Scratch اکنون ، دقیقاً مانند یک مرورگر وب است و باعث می شود من در اینجا اطلاعاتی را در اینجا
انجام دهم.
پس بگذارید جلو بروم و نام خود را تایپ کنم.
دیوید.
وارد کردن
و voila
کار می کند
سلام ، دیوید.
من به نوعی تقلب هستم ، درست است؟
زیرا اگر بزرگنمایی کنم ، متوقف شوم و دوباره بازی کنم.
بگذارید نام جولیا را در اینجا تایپ کنم ، وارد شوید و هنوز هم می گوید سلام ، دیوید.
بنابراین این واقعاً ایده ای را که می خواستم اجرا نکرد.
خوب ، پس چگونه می توانم این را برطرف کنم؟
خوب ، به نظر می رسد که این بار من بیش از یک اثر جانبی می خواهم.
من می خواهم از ارزشی که انسان در آن می کند استفاده کنم.
و برای این کار ، ما به یکی دیگر از ویژگی های توابع احتیاج
داریم ، یعنی این که نه تنها می توانند گاهی اوقات عوارض جانبی داشته
باشند ، بلکه اتفاق بصری رخ می دهد.
برخی از کارکردها می توانند یک مقدار ، به اصطلاح بازگشت به شما را به شما
بازگردانند ، که به شما امکان می دهد در واقع از هر نوع تایپ شده انسان استفاده کنید.
بنابراین مقدار بازگشت چیزی است که تقریباً به شما بازگردانده می شود و
می توانید آن را در چیزی به نام متغیر مانند X ، Y و Z در ریاضیات ذخیره
کنید و به طور کلی می توانید یک یا چند بار از آن استفاده مجدد کنید.
بنابراین بگذارید واقعاً توجه خود را جلب کنم ،
نه تنها در سمت چپ ، نه تنها قطعه پازل آبی ، از شما بپرسید که نام شما چیست و
صبر کنید ، بلکه توجه کنید که یک قطعه پازل ویژه در زیر آن
وجود دارد ، این بیضی آبی به نام پاسخ ، و این نشان دهنده آنچه یک
دانشمند رایانه می داند ارزش بازگشت را می نامد.
بنابراین MIT به نوعی آن را در کنار هم قرار داده
است تا مشخص شود که یکی از این قطعات به دیگری مربوط می شود.
معنی این است که من می توانم این کار را انجام دهم.
من می توانم این بیضی را بکشم و از این بیضی به عنوان ورودی به عملکرد ذخیره استفاده کنم.
حال ، توجه کنید که این اندازه یکسان نیست ، اما شکل مناسب است ، بنابراین اشکالی ندارد.
خراش چیزها رشد می کند یا به درستی متناسب می شود.
اما این نیز کاملاً درست نیست.
بگذارید جلو بروم و این کار را انجام دهم.
بگذارید جلو بروم و جلوی آن را بگیرم ، روی پرچم سبز کلیک کنید.
من دوباره نام خود را تایپ می کنم.
D-A-V-I-D.وارد کردن
و این فقط یک نوع عجیب یا بی ادب است.
مثل ، من حداقل سلام می خواستم ، و فقط دیوید روی صفحه گفت.
خوب ، بنابراین من می توانم آن را برطرف کنم.
بگذارید با علامت توقف قرمز متوقف شوم.
بگذارید فقط اینها را به طور موقت جدا کنم.
و من می توانم آن را در وسط آنجا بگذارم ، اما
آنها به طور موقت ارتباط منطقی ندارند.
بگذارید به ظاهر برگردم.
بگذارید من یک بلوک ، یک دوم را بگیرم ، و بگذارید من جلو بروم
و بگویم ، فقط برای اینکه گرامری باشم ، سلام ، فضا.
و سپس من این را دوباره وصل می کنم.
بنابراین در حال حاضر به نظر می رسد مانند آنچه من می خواهم ، می خواهم یک
سلام ، کاما و سپس ارزش بازگشت چاپ شده بر اساس هر آنچه که انسان تایپ شده است چاپ شود.
پس بگذارید بزرگنمایی کنم.
بگذارید روی پرچم سبز کلیک کنم.
باز هم ، اسم شما چیست؟
D-A-V-I-D.و عوارض جانبی گربه را تماشا کنید.
وارد کردن
هنوز به درستی به من سلام نمی کند.
سلام نیست
و اگر در صورت خیلی سریع بود ، بیایید دوباره این کار را انجام دهیم.
پرچم سبز
D-A-V-I-D.وارد کردن
این بی رحمانه فقط نام من را می گوید ، که عجیب است.
اشکال اینجا چیست؟
کمی ظریف تر است.
چرا؟
آره؟
مخاطب: فقط به سرعت پیش می رود.
دیوید مالان: بله.
در این حالت خیلی سریع به دستور Say یا عملکرد
Say می رود.
مک من ، رایانه شخصی ، تلفن شما ، خیلی سریع خسته شده است.
هر دو اتفاق می افتد ، اما خیلی سریع برای چشمان انسان من حتی متوجه می شود.
بنابراین ما می توانیم این کار را از چند طریق حل کنیم.
من در واقع می توانم از یک قطعه پازل متفاوت استفاده کنم.
در حقیقت ، نوع MIT این را پیش بینی کرده است.
توجه داشته باشید که اولین قطعه پازل در بنفش این است که
برای تعداد مشخصی از ثانیه سلام سلام کنید ، و
می توانید نه تنها پیام بلکه تعداد ثانیه ها ، دو
ورودی را مشخص کنید ، در غیر این صورت اکنون به عنوان آرگومان برای یک عملکرد شناخته می شود.
ورودی به یک تابع اکنون فقط یک آرگومان است.
و این می تواند یک مشکل در اینجا باشد.
شاید کمی صریح تر این کار را انجام دهم.
من می توانم زیر رویدادها بروم ، کمی به پایین حرکت کنم ، و- با عرض
پوزش ، تحت کنترل در نارنجی ، می توانم یک بلوک
انتظار را بگیرم و می توانم آن را در وسط قرار دهم.
و این ممکن است در واقع کمک کند.
بنابراین می توانم روی پرچم سبز کلیک کنم.
D-A-V-I-D.وارد کردن
سلام ، دیوید.
و من می توانم زمان را تغییر دهم تا کمی طبیعی تر باشد.
اما اگر بخواهم گربه فقط سلام کند ، دیوید همه در یک نفس ،
به اصطلاح صحبت می کند.
خوب ، به همین دلیل من نیاز به استفاده از یک تکنیک کمی متفاوت به شرح
زیر دارم.
بگذارید جلو بروم و از شر انتظار خلاص شوم.
بگذارید از شر Say Block خلاص شوم و گربه را با علامت توقف متوقف کنم.
بگذارید من به اینجا زیر اپراتورها بروم و بگذارید تا حدودی هوشمندانه این را بگیرم.
یک بلوک در پایین.
به طور پیش فرض ، از اپل و موز به عنوان متقاضیان استفاده می کند ،
اما این تخمدان های سفید هستند تا بتوانم آنها را تغییر دهم.
بگذارید این کار را روی بیضی سفید برای عملکرد ذخیره بکشم و
رها کنم ، و آن را پر می کند.
بگذارید به اینجا بروم و به جای اپل سلام ، کاما ، فضا را تایپ کنم.
و به جای موز چه کاری باید انجام دهم؟
مخاطب: پاسخ دهید.
دیوید مالان: بله.
بنابراین می تواند مقدار بازگشت
پاسخ باشد- مقدار بازگشت.
بنابراین اجازه دهید دوباره تحت سنجش قرار بگیرم.
بگذارید فقط نسخه دیگری از آن را بکشم.
و می توانید این موارد را دوباره و دوباره و دوباره استفاده کنید.
آنها ناپدید نمی شوند.
من می خواهم پاسخ را بر روی موز بکشم تا ورودی دوم برای
پیوستن ، در صورت تمایل ، خروجی بلوک Ask Ask ، مانند آن باشد.
و آن را متناسب می کند.
بنابراین اگر من جلو می روم و یک بار دیگر روی پرچم سبز کلیک می کنم.
D-A-V-I-D.وارد کردن
اکنون ما رفتاری را از نظر زیبایی شناسی داریم که به آن اهمیت می دهم.
اما فراتر از زیبایی شناسی این ، هدف در اینجا
واقعاً نقشه برداری از آن بود ، دوباره ، همان پارادایم ، که ما در اینجا خواهیم دید.
الگوریتم و خروجی و ورودی برای این مثال به شرح زیر است.
ورودی به Say Block ، نقل قول ، بی نظمی بود ، نام شما چیست؟
عملکرد ، البته اجرای آن الگوریتم در کد ،
بلوک Ask و Wait بود.
هرچند خروجی بلوک Ask برخی از عوارض جانبی بینایی را به یاد می آورد.
این یک مقدار بازگشت به نام پاسخ ، مانند یک متغیر
، متغیر ویژه مانند X ، Y و Z در ریاضی است.
اما در این مورد ، ما به طور کلی در برنامه
نویسی متغیرهایی را با کلمات واقعی توصیف می کنیم ، نه فقط حروف.
اما این خروجی از بلوک Say ، من می خواهم جایی را برای آن فراهم
کنم که آن را به عنوان یک استدلال دوم به بلوک بگو.
بنابراین بیایید این کار را انجام دهیم.
بیایید یک قدم به عقب برداریم و پیشنهاد کنیم که اکنون برای بلوک
پیوستن که من فقط استفاده کردم.
دو ورودی سلام ، فضا و جواب می گیرد.
عملکرد مورد نظر در واقع بلوک پیوستن است.
دیوید ، خروجی این سلام بهتر بود.
با خروجی بلوک پیوست می خواهم چه کار کنم؟
خوب ، بگذارید صفحه را پاک کنم.
بگذارید این کار را انجام دهم ، زیرا اکنون خروجی
بلوک پیوست فوراً به ورودی بلوک می گوید تا
خروجی اکنون در این فرآیند چند مرحله ای
، عارضه جانبی سلام ، دیوید باشد.
بنابراین این واقعیت که من این بلوک ها را در بالای یکدیگر
قرار دادم بسیار عمدی بود.
اگر من در اینجا بزرگنمایی کنم ، توجه داشته باشید که سلام و پاسخ در بالای پیوستن است
، پیوستن در بالای Say Block است.
و اگر به ریاضیات دبیرستان فکر می کنید ،
این مانند زمانی است که شما پرانتز داشتید و
مجبور بودید کارهای داخل پرانتز را قبل از چیزهای خارج از پرانتز انجام دهید.
این همان ایده است ، اما من به جای آن فقط بصری آنها را جمع می کنم.
اما خروجی ها بسته به آنچه انتظار می رود در آنجا می توانند به ورودی تبدیل شوند.
بگذارید در اینجا مکث کنم و ببینم آیا سؤالی در مورد
آنچه گربه انجام می دهد وجود ندارد ، اما گربه چگونه این کار را انجام می دهد.
سوالات در دست؟
خوب
خوب ، بیایید گربه را مانند گربه مانند بیشتر کنیم و این کار را انجام دهیم.
بگذارید همه بلوک ها را دور بزنم و فقط به آنجا بروم.
و بگذارید در پایین یک ویژگی خوب خراش را معرفی کنم که به موجب
آن این برنامه های افزودنی نیز وجود دارد
که تمایل به استفاده از ابر ، اینترنت دارند تا عملکرد بیشتری به شما بدهند.
و در واقع ، من قصد دارم روی این برنامه افزودنی در اینجا کلیک کنم ، متن به گفتار.
و اگر روی آن کلیک کنم ، ناگهان یک دسته کاملاً جدید از
بلوک ها را در پایین می گیرم.
متن به گفتار.
آنها به نظر می رسد سبز هستند.
اما آنچه در اینجا خوب است این است که من واقعاً
می توانم گربه را به طور شنیدنی بگوید.
بنابراین بگذارید به جای بلوک Say Block ، بلوک Speak را در اینجا بکشم.
من نمی خواهم فقط سلام کند.
بگذارید جلوی این کار را بگیرم
بنابراین اجازه دهید من به زیر اپراتورها برگردم.
بگذارید یک بلوک دیگر را بگیرم ، زیرا من دیگری را دور انداختم.
بگذارید دوباره اپل را به سلام ، دوباره فضا تغییر دهم.
بگذار من به حسگر بروم.
بگذارید دوباره به موز پاسخ دهم.
و حالا اجازه دهید من به پرچم سبز ضربه بزنم و بگذارید نام خود را تایپ کنم ، D-A-V-I-D.
و در یک لحظه من به enter و.
کامپیوتر: سلام ، دیوید.
دیوید مالان: خوب.
دقیقاً شبیه گربه نیست ، اما سنتز شد.
اما در زیر این متن به بلوک های گفتار معلوم می شود ، برخی دیگر وجود دارد.
به عنوان مثال ، صدا را روی آلتو تنظیم کنید ، به نظر می رسد پیش فرض است.
اما بیایید این را تغییر دهیم.
بنابراین توجه کنید که برخی از قطعات پازل فقط تخم مرغ های سفید را نمی گیرند.
آنها حتی ممکن است روند سقوط داشته باشند.
بنابراین هرکسی که آن قطعه پازل را ایجاد
کرده است از قبل تصمیم گرفت انتخاب های موجود برای آن ورودی در هر کشویی چیست.
بنابراین من قصد دارم آن را به Squeak تغییر دهم ، که به نظر می
رسد- یا در واقع بچه گربه حتی مناسب تر به نظر می رسد.
بگذارید بزرگنمایی کنم ، روی پرچم سبز کلیک کنید ، نام من را تایپ کنید.
D-A-V-I-D.وارد کردن
کامپیوتر: میو ، میو.
دیوید مالان: جالب است.
بنابراین به نظر نمی رسد مهم باشد که چه چیزی را تایپ می کنم.
بنابراین در مورد دیوید مالان چطور.
کامپیوتر: میو ، میو ، میو.
دیوید مالان: بنابراین به نظر می رسد متناسب با مدت زمان
این عبارت است که من تایپ کردم.
این می تواند به سرعت کمی خزنده شود.
اگر بچه گربه را به غول تغییر دهم.
بگذارید جلو بروم و بازی کنم.
D-A-V-I-D.وارد کردن
کامپیوتر: سلام ، دیوید.
دیوید مالان: بنابراین شما می توانید با روش های بسیار
غیر دانشگاهی ، با این کار سرگرم شوید ، اما فقط با
این ورودی ها و خروجی های مختلف بازی می کنید.
اما بیایید واقعاً به جای اینکه حرفی را بگوییم ، گربه مانند گربه
مانند و در واقع مبهم انجام دهد.
بنابراین بگذارید همه اینها را دور بیندازم.
بگذارید اکنون زیر صدا بروم.
بگذارید صدای پخش را تا زمان انجام کار بکشم.
و به طور پیش فرض در اینجا ، به طور پیش فرض ، صدای گربه را دریافت کنید.
شما می توانید صداهای خود را ضبط کنید.
یک کتابخانه کامل از سگ ها و پرندگان و
انواع صداهایی که می توانید وارد برنامه کنید وجود دارد.
من آن را با گربه ساده نگه می دارم.
و بگذارید روی پرچم سبز کلیک کنم.
کامپیوتر: میو.
دیوید مالان: خوب.
بنابراین گربه یک بار از بین رفت.
اگر دوباره گربه را به Meow می خواهم ، می توانم این کار را انجام دهم.
کامپیوتر: میو.
دیوید مالان: اگر می خواهم بار سوم گربه را به Meow می خواهم ، دوباره می توانم بازی کنم.
کامپیوتر: میو.
دیوید مالان: بنابراین اگر این بازی را انجام دهید ، این
نوع خسته کننده است ، من باید روی دکمه کلیک کنم ، روی
دکمه کلیک کنید تا گربه به این روش زنده نگه دارد.
بنابراین شاید من می خواهم این اتفاق دوباره و دوباره و دوباره اتفاق بیفتد.
خوب ، بگذارید فقط این کار را انجام دهم.
بگذارید من نوع کشیدن و رها کردن را به نوعی بکشم.
یا می توانم کلیک راست یا کنترل را راست کنم و سپس یک
منوی کوچک به من اجازه می دهد تا بلوک های کپی یا تکراری را کپی کنم.
اما من فقط به کشیدن و رها کردن ادامه خواهم داد.
بیایید این کار را انجام دهیم
کامپیوتر: میو.
میو
میو
دیوید مالان: نوع گربه گرسنه ، ناراضی.
بنابراین بیایید همه چیز را آهسته کنیم تا دوباره شایان ستایش باشد.
پس بگذارید تحت کنترل باشم.
بگذارید یکی از کسانی را که یک ثانیه صبر می کنم بگیرم ، و من این را اینجا می ریزم.
یکی دیگر
بگذارید اینجا را جمع کنم.
دوباره روی بازی کلیک کنید.
کامپیوتر: میو.
میو
دیوید مالان: Cuter.
گرسنه کمتر
مطمئناً
اما این برنامه اکنون ، من جرات می کنم ، درست
است اگر هدف من این است که سه بار گربه را بدست آورم.
اما اکنون ، حتی اگر قبلاً هرگز برنامه ریزی نکرده اید ، این برنامه را نقد کنید.
به خوبی طراحی نشده است ، حتی اگر صحیح باشد.
به عبارت دیگر ، این می تواند بهتر باشد.
چگونه ، ممکن است فکر کنید؟
آره؟
مخاطب: یک حلقه.
دیوید مالان: بنابراین با استفاده از یک حلقه.
و چرا؟
چرا شما را تشویق می کنید که از یک حلقه استفاده کنم حتی اگر مانند آن کار کند؟
مخاطب: ترسیم ساده تر است.
DAVID MALAN: Yeah.
به طور خلاصه ، استفاده از یک حلقه ساده تر است
زیرا می توانم صریحاً در یک مکان مشخص کنم که چند بار می خواهم آن را
حلقه کنم.
و علاوه بر این ، رک و پوست کنده ، هر زمان که در حال کپی کردن و چسباندن چیزی در کد
هستید یا دوباره و دوباره همان کار را می کشید ، شانس این است که
شما کاری احمقانه انجام می دهید.
چرا؟
زیرا خود را غیر ضروری تکرار می کنید.
و این کمی افراطی است ، اما فرض کنید من می
خواهم بعداً این برنامه را تغییر دهم تا گربه دو ثانیه در بین میو مکث کند.
خوب ، بدیهی است که من فقط می توانم به اینجا بروم و دو نفر را انجام دهم.
اما اگر فراموش کنم چه می شود؟
و فرض کنید این برنامه مانند پنج یا شش قطعه پازل نیست.
فرض کنید 50 یا 60 یا 500 یا 600 است.
سرانجام من یا همکار من با آن کار می کنم.
آنها قصد دارند در یک مکان یک ارزش را تغییر دهند ، فراموش کنید که آن را در دیگری تغییر دهید.
پس چرا احتمال اشتباه را دعوت می کنید؟
فقط کارها را ساده کنید تا فقط باید ورودی ها را در یک مکان تغییر دهید.
بنابراین چگونه می توانم این کار را انجام دهم؟
بگذارید بزرگنمایی کنم.
بگذارید بیشتر این تکثیر را دور بیندازم
و من را فقط با نمایشنامه و عملکرد انتظار رها کنم.
بگذارید اکنون ، تحت کنترل ، یکی از این موارد را نیز بگیرید.
به عنوان مثال می توانم به شرح زیر تکرار کنم.
بگذارید تکرار کنم.
من قصد دارم این موارد را در دو بخش جابجا کنم.
بنابراین من قصد دارم این را به پایین حرکت دهم.
خیلی کوچک است ، اما متناسب با شکل مناسب رشد می کند.
سپس اجازه دهید من آن را دوباره از اینجا استفاده کنم.
بگذارید پیش فرض 10 را به 3 تغییر دهم.
و اکنون فکر می کنم من دقیقاً همان کاری را که شما دلگرم کننده هستید انجام داده ام ، که ساده تر است.
و اکنون روی بازی کلیک می کنم.
کامپیوتر: میو.
میو
دیوید مالان: اکنون و.
کامپیوتر: میو.
دیوید مالان: بله.
بنابراین هنوز درست است ، اما به طور قابل ملاحظه ای بهتر طراحی شده است.
من می توانم کارها را ساده نگه دارم و اکنون فقط در یک مکان چیزها را
تغییر دهم و به کار خود ادامه می دهد.
من ادعا می کنم که اکنون این کمی خسته کننده است.
مانند ، چرا من ایده meowing را اجرا می کنم؟
آیا MIT بهتر نبود که به تازگی یک قطعه پازل Meow
را برای ما اجرا کرده باشد؟
زیرا همه چیز در اطراف گربه مضمون است.
چرا قطعه پازل Meow وجود ندارد؟
چرا برای ساختن آن عملکرد باید تمام این پیچیدگی ها را طی کنم؟
خوب ، آنچه در مورد خراش خوب است و آنچه در مورد
زبانهای برنامه نویسی به طور کلی خوب است این است
که به طور کلی می توانید قطعات پازل خود ، عملکردهای خود را اختراع کنید و سپس از
آنها استفاده و استفاده مجدد کنید.
پس بگذارید جلو بروم و این کار را انجام دهم.
من قصد دارم در اینجا به زیر بلوک های خود بروم.
من قصد دارم به جلو بروم و روی ایجاد یک بلوک
کلیک کنم و قصد دارم با این رابط در اینجا خواسته شود.
و من قصد دارم این بلوک را به معنای واقعی کلمه Meow بنامم ، زیرا ظاهراً MIT
فراموش کرده است که آن را برای ما اجرا کند.
و من فقط قصد دارم جلو بروم و بلافاصله روی OK کلیک کنم.
و آنچه اکنون خواهید دید دو چیز است.
یکی ، روی صفحه نمایش ، من به این قطعه صورتی صورتی که می گوید Meow را به
شرح زیر تعریف می کند ، به من داده شده است.
بنابراین هر چیزی که من به قسمت پایین آن بلوک تعریف می
کنم ، می تواند معنای meowing را تعریف کند.
و در بالا سمت چپ ، توجه کنید که من در زیر بلوک هایم هستم.
من اکنون یک قطعه پازل صورتی به نام Meow
دارم که یک عملکرد جدید است که هر کاری را انجام می دهد که بلوک کد
دیگر به گربه می گوید.
پس می خواهم اینجا چه کار کنم؟
خوب ، من در حال حاضر آن را ساده نگه دارم.
من قصد دارم صدای پخش صدا را تا زمانی که انجام شود حرکت کنم و دو ثانیه صبر کنم.
اگرچه بیایید آن را به یک ثانیه تغییر دهیم تا کارها را به حرکت درآوریم.
و حالا بگذارید قطعه پازل Meow را به
حلقه خود بکشم تا اکنون ، چه کاری انجام می دهد؟
این سه بار به Meow می رود.
و فقط برای نمایشی ، خارج از دید ، خارج از ذهن.
بگذارید بدون دلیل فنی ، فقط این کار
را به پایین صفحه بکشید و سپس به عقب بروید تا فقط به
این نکته بپردازیم که بصری وجود دارد که اکنون وجود دارد.
این یک جزئیات پیاده سازی است که ما می توانیم از آن جدا شویم ،
بدون توجه به نحوه وجود آن ، زیرا من اکنون در یک سطح مفهومی بالاتر می دانم ، اگر
می خواهم یک MEOW ، من فقط از قطعه پازل Meow استفاده می کنم ، و من یا شخص
دیگری در حال حاضر به نحوه اجرای Meowing پرداختیم.
بنابراین حالا بگذارید جلو بروم و بازی کنم.
کامپیوتر: میو.
میو
میو
دیوید مالان: خوب ، بنابراین همان کد دقیق ، اما مطمئناً طراحی
بهتر است زیرا من اکنون به خودم کد قابل استفاده مجدد داده ام ، بنابراین
لازم نیست که آن چندین بلوک را کپی کنم.
من فقط می توانم دوباره و دوباره از Meow استفاده کنم.
اما بیایید یک پالایش انجام دهیم.
بگذارید در واقع به جایی که در واقع این کار را انجام دادم ، پیمایش کنم.
بگذارید کلیک بر روی آن کلیک کنم یا بر روی آن کلیک
راست کنم و به من اجازه دهید بلوک صورتی را که لحظه ای
پیش ایجاد کردم ویرایش کنم ، زیرا می خواهم آنچه را که در مورد ورودی ها موعظه کرده ام تمرین کنم.
بنابراین من نمی خواهم این عملکرد فقط به نام meow نامیده شود.
من می خواهم این عملکرد همچنین یک ورودی داشته
باشد ، و فقط برای سازگاری با استفاده از N قبلی ، که در علوم کامپیوتر به طور کلی به
معنای شماره است ، اجازه دهید تا زمان های زیادی داشته باشم.
و فقط به این ترتیب که این قطعه پازل حتی بیشتر از برنامه نویس
سازگار باشد ، بگذارید فقط یک برچسب متنی اضافه کنم که هیچ
اهمیت فنی ندارد به غیر از اینکه این عملکرد را
به روشی دوستانه انگلیسی تر بخواند.
Meow n Times.
بگذارید روی OK کلیک کنم.
و اکنون توجه داشته باشید که این چیز در پایین به گونه ای
تغییر کرده است که نه تنها به نام Meow نامیده می شود ، بلکه ذکر
صریح N نیز وجود دارد ، که یک دایره است ، دقیقاً همان شکل متغیر است که ما قبلاً
وقتی به آن پاسخ می دادیم ، دیدیم.
این یک مقدار بازگشت نیست ، هر چند.
این همان چیزی است که ، دوباره ، ما می خواهیم یک آرگومان را فراخوانی کنیم ، ورودی به یک عملکرد.
پس بگذارید این کار را انجام دهم.
من قصد دارم این کار را به بالا منتقل
کنم تا بتوانم همه چیز را در یک مکان ببینم
، و قصد دارم یک اصلاح را انجام دهم ، زیرا هدف
من اکنون تهیه یک نسخه جدید و بهبود یافته از Meowing است که در واقع چند بار
در نظر می گیرد که گربه را می خواهم.
بنابراین به جای استفاده از یک حلقه در برنامه خودم در زیر وقتی که پرچم سبز کلیک کرد
، می خواهم این کار را به طور موقت جدا کنم.
من قصد دارم این را دور کنم.
من قصد دارم این کد را به اینجا منتقل کنم و قصد دارم دوباره آن را دوباره انجام دهم.
بنابراین با تمرکز برای لحظه ای فقط در
سمت چپ ، Meow اکنون به عنوان تکرار سه بار دو کارکرد زیر تعریف شده است.
صدا بازی کنید و صبر کنید.
اما این کاملاً درست نیست.
من می خواهم از شر این سه خلاص شوم.
بنابراین چه کاری می توانم انجام دهم؟
از آنجا که من یک لحظه پیش این ورودی را به عملکرد Meow ایجاد کردم ، در واقع
می توانم یک نسخه از آن را از سمت راست بکشم که
این سه نفر را تغییر می دهد تا به طور کلی N باشد.
بنابراین اکنون من یک تابع به نام Meow دارم که هر چند بار از آن استفاده می کند.
و آنچه اکنون خوب است برنامه واقعی من است که توسط آن پرچم سبز اداره می شود ، من می توانم
سه تایپ کنم ، می توانم در 10 تایپ کنم ، می توانم در 100 تایپ کنم ، و این فقط کار خواهد کرد.
و از این پس ، من می توانم دوباره به طرز چشمگیری
این را به پایین بکشید ، بنابراین ما دیگر نمی دانیم یا به آن اهمیت نمی دهیم.
اکنون برنامه من یک خط واحد است که به موجب آن فقط با
تعریف عملکرد خودم یا بلوک سفارشی ، این مفهوم Meowing از بین
رفته است.
پس از این ، فقط در مورد این ایده ، این
اصل ایجاد کارکردهای شخصی خود برای پنهان کردن جزئیات
اجرای پس از حل مشکل؟
بنابراین ، شما نمی خواهید دوباره در مورد همین مشکل
فکر کنید.
و این زیبایی برنامه نویسی است ، به طور معمول.
س questions الات در مورد آنچه در اینجا فقط انجام دادیم؟
نه؟
خوب
خوب ، بیایید این کار را انجام دهیم.
حال بیایید این را کمی تعاملی در کد انجام دهیم.
بگذارید به این پرچم سبز بروم.
بگذارید به پایین حرکت کنم و فقط تمام این سخت کوشی ها
را دور بریزم که اگر می خواهید آنها را با جزئیات آهسته تر مرور کنید ، نسخه
هایی را در وب سایت دوره های همه این برنامه ها داریم.
بیایید این کار را انجام دهیم
تحت کنترل ، روش های دیگری برای حلقه وجود دارد.
این بلوک برای همیشه وجود دارد که فقط کاری را برای همیشه انجام خواهد داد.
بنابراین در بلوک برای همیشه ، جایی برای کد دیگری وجود دارد.
و من قصد دارم در اینجا به بخش کنترل بروم و
در صورت بلوک یکی از این موارد را بگیرم ، بنابراین یکی از این شرط ها.
بیایید این را به اینجا وصل کنیم.
و اکنون توجه کنید که آیا ، و پس از آن این نوع مکان نگهدارنده مانند ذوزنقه وجود
دارد که احتمالاً متناسب با چه چیزی است؟
IF شرطی است.
برای همیشه یک حلقه است.
بگو و موارد دیگر توابع بوده است.
اصطلاح کلیدی دیگر که از آن استفاده کردیم چیست؟
بنابراین یک بیان بولی.
ما باید یکی از آن سوالات دروغین بله ، نه یا واقعی را در اینجا قرار دهیم.
پس اینها چیست؟
خوب ، من چند سال است که از خراش استفاده می کنم ،
بنابراین من احساس می کنم یکی از این شکل ها در اینجا وجود دارد.
لمس کننده ماوس ، علامت سوال.
علامت سؤال به معنای واقعی کلمه ، تمام ایده یک عبارت بولی را بله ، نه ،
برانگیخته است.
این خیلی بزرگ است که متناسب باشد ، اما شکل مناسبی است.
پس بگذارید آن را بکشم.
برو
برای پر کردن
و حالا بگذارید به صدا بروم.
بگذارید آن صدا را بگیرم ، تا زمانی که تمام
نشده باشد ، و آن را در آن مشروط قرار دهم به گونه ای که من چه نوع
برنامه ای را در اینجا اجرا کرده ام ، مسلماً؟
این برنامه هنگام کلیک بر روی پرچم سبز چه خواهد کرد؟
خوب ، در حال حاضر هیچ چیز.
مخاطب: لمس کردن گربه.
دیوید مالان: اما من گربه را لمس نمی کنم.
بنابراین اگر نشانگر ماوس را به گربه منتقل کنم.
کامپیوتر: میو.
دیوید مالان: دوباره.
کامپیوتر: میو.
دیوید مالان: دوباره.
کامپیوتر: میو.
دیوید مالان: اگر بخواهید ، این نوع اجرای ایده گربه کردن یک گربه است
، زیرا من برای همیشه فقط منتظر و منتظر و منتظر هستم.
آیا نشانگر ماوس با آن اسپریت لمس می کند و آن گربه را لمس می کند؟
و فقط اگر چنین است ، پیش بروید و آن صدا را تا زمانی که تمام شود بازی کنید.
اما اکنون می توانیم کارها را کمی جالب تر کنیم.
بگذارید این کار را متوقف کنم و بگذارید کاری کاملاً متفاوت انجام دهم.
بگذارید تمام این کار سخت را دور بیندازم.
بگذارید زیر پسوند بروم.
بگذارید به سنجش ویدیویی بروم ، زیرا امروزه تعداد زیادی لپ تاپ ، که
شامل من است ، دارای یک وب کم است.
بگذارید استفاده از آن را در آنجا تأیید کنم.
و می توانید من را در قاب ببینید.
و بگذارید این کار را انجام دهم.
بگذارید یکی از این موارد را بکشم که حرکت بیش از یک اندازه باشد.
و از طریق آزمایش و خطا ، فهمیدم که 50 نفر تمایل به کار خوب دارند.
بگذارید اینجا از قاب خارج شوم و از کنار آن برنامه ریزی کنم.
و اگر من تا زمان انجام کار به صدا در می آیم ،
توجه داشته باشید که این جایگزین برای استفاده از هنگام کلیک بر روی پرچم سبز است.
این یک دسته از بلوک است که دائماً
منتظر آنچه ما یک رویداد خواهیم نامید.
یک رویداد فقط اتفاقی است که می تواند روی صفحه ، یک کلیک ، کشیدن ،
حرکت ماوس و غیره اتفاق بیفتد.
بنابراین بگذارید اینجا بزرگنمایی کنم.
و اکنون ، اگر من می توانم این کار را انجام دهم- اینجا می رویم.
نه ، خیلی کند.
هنوز خیلی کند
صبر کنید ، آیا روی بازی کلیک کردم؟
بیایید ببینیم
دوباره امتحان کنید
کامپیوتر: میو.
دیوید مالان: آنجا می رویم.
خوب
50 is a little too high, apparently.
بنابراین بیایید این را کمی ملایم تر کنیم.
10
کامپیوتر: میو.
دیوید مالان: خوب ، خوب.
کامپیوتر: میو.
دیوید مالان: آنجا می رویم.
کامپیوتر: میو.
دیوید مالان: آنجا می رویم.
کامپیوتر: میو.
دیوید مالان: خوب ، بنابراین ما اکنون از نظر جسمی ایده ای برای پاسخ دادن به
گربه گربه را اجرا کرده ایم.
کامپیوتر: میو.
Meow.
دیوید مالان: اوه ، لعنتی.
خوب
کامپیوتر: میو.
میو
میو
دیوید مالان: خوب.
بنابراین این یک اشکال است.
مثل الان- این تقصیر MIT است.بنابراین در پاسخ به علامت
Red Stop متوقف نمی شود.
بنابراین در شک چه کاری انجام می دهید؟
شدیدترین ، شما راه اندازی مجدد می کنید.
در حال حاضر ، من فقط قصد دارم پنجره را ببندم.
خوب
بنابراین اکنون ما همه آن بدلندگان را که
در آن شبه کد دیدیم ، دیده ایم ، اما در این زبان برنامه نویسی گرافیکی
تجسم یافته است ، و دوباره ، بدون پرانتز و نیمه رنگ ها و نقل قول های مضاعف و
تمام آن نگارشی که قبل از مدت طولانی معرفی خواهیم کرد.
اما در حال حاضر ، ما مکانیسم هایی را
داریم که می توانیم کارهای بسیار جالبی انجام دهیم.
بنابراین ، در واقع ، من فکر کردم ، با روحیه فکر کردن به روزهای قدیمی
، فکر می کردم اولین برنامه ای را که نوشتم وقتی واقعاً می نوشتم باز می
کردم-من در یک کلاس MIT ثبت نام کردم و کلاس را
گرفتم که معلمان مشتاق را برای خراش دادن معرفی کرد.
و من این برنامه را در اینجا به نام Oscartime اجرا کردم که
یک بازی بود که از یک آهنگ کودکی استفاده می کرد که من طرفدار آن بودم
و به شما امکان می دهد سطل زباله را به سطل زباله بکشید.
اما برای زنده کردن این امر و شاید در ازای یک توپ استرس ، آیا می
توانم یک داوطلب شجاع را که می خواهد بیاید و این صفحه کلید را کنترل کند
، بدست آورم؟
من اول دست تو را دیدم.
بیا بلند
بیا بلند
و به لطف تیم خواهید دید که ما این لامپ شگفت انگیز را نیز در اینجا داریم که در
خیابان کوئینسی همانطور که هستیم قرار داریم.
آیا می خواهید خود را به گروه معرفی کنید؟
مخاطب: سلام ، نام من آنا است.
من اهل ریچموند ، ویرجینیا هستم و در جوش هستم.
دیوید مالان: خوب.
جوش
مخاطب: بله!
دیوید مالان: خوب ، بیا.
بنابراین ، در اینجا ، آنا ، شما فرصتی برای
انجام اولین بازی ای که در ابتدا نوشتم ، خواهید داشت که
مسلماً پیچیده تر از آن چیزی است که انتظار
داریم یک دانش آموز برای اولین بار این کار را انجام دهد ، همانطور که در مشکل صفر است.
اما کاری که من می خواهم انجام دهم این است که تمام صفحه این اینجا است.
من قصد دارم روی پرچم سبز کلیک کنم و آنچه در صفحه مشاهده خواهید کرد
این دستورالعمل ها هستند.
قبل از پایان آهنگ او ، زباله های در حال سقوط را به سطل آشغال اسکار بکشید.
و اینجا می رویم.
[اسکار گروچ ، "من زباله ها را دوست دارم"]
اوه ، من عاشق سطل
آشغال هر چیز کثیف یا خاردار یا گرد و
غبار هر چیز خزنده یا پوسیده یا زنگ زده
هستم ، من عاشق سطل
زباله دیوید مالان هستم: آنجا می رویم.
بنابراین همانطور که آنا به بازی خود ادامه می دهد ، بیایید این کار را کمی از هم جدا کنیم.
بنابراین ، برخی از لباس ها روی صحنه وجود دارد.
مانند آن Lamppost در واقع هرگز حرکت نمی کند.
اما یک زن و شوهر از اسپری ها وجود دارد.
سطل زباله وجود دارد ، که به نظر می رسد شخصیتی برای خودش است.
این قطعه زباله وجود دارد که همچنان به عقب و عقب می رود.
این یک اسپری است.
اکنون این کفش ورزشی وجود دارد ، که یکی دیگر از اسپری ها است.
و در واقع ، توجه داشته باشید که البته اسکار یک بار در حالی که از اسپری
خود بیرون می آید.
بنابراین به نظر می رسد اسکار چندین لباس دارد.
بنابراین اگر می خواهید این کار را به عنوان نمونه ارائه می دهم ، همانطور که می خواهید بازی کنید.
کار بسیار خوب تا کنون
آهنگ برای همیشه ادامه می یابد.
این یک کابوس برای اجرای ، گوش دادن به این همه روز بود.
اما چگونه بقیه این موارد را پیاده سازی می کنیم؟
خوب ، توجه داشته باشید که سطل زباله ، هر بار که به سطل زباله می
رود ، در جایی متفاوت ظاهر می شود.
بنابراین نوعی تصادفی وجود دارد.
و در واقع ، Scratch به شما امکان می دهد تا شماره های تصادفی را در یک محدوده انتخاب کنید.
بنابراین شاید بتواند 240 منفی باشد ،
شاید بتواند 240 مثبت باشد ، در نقطه 180 در بالای صفحه.
بنابراین می توانید به طور تصادفی چیزها را روی صفحه قرار دهید.
ظاهراً چه نوع ساختاری وجود دارد که باعث
می شود زباله ها بارها و بارها سقوط کنند.
من فکر می کنم هیچ کس به من گوش نمی دهد.
همه آنها فقط شما را تماشا می کنند.
چه چیزی باعث می شود سطل زباله از بالا به پایین سقوط کند؟
بنابراین در واقع نوعی حلقه است زیرا یک بلوک حرکتی در داخل
یک حلقه برای همیشه وجود دارد ، احتمالاً ،
این فقط باعث می شود زباله ها یک پیکسل ، یک پیکسل ، یک پیکسل ، یک
پیکسل ، یک پیکسل ، ایجاد توهم ، بنابراین حرکت.
و اگر بتوانیم آهنگ را کمی بیشتر لنگ کنیم ،
خواهید دید که اکنون این همه هماهنگ شده است.
اسکار Grouch: (آواز) زیرا آنها زباله هستند ،
من عاشق زباله
های هر چیز کثیف یا غلیظ یا گرد
و غبار هستم-
دیوید مالان: این آهنگ برای همیشه ادامه می یابد ، به ظاهر.
و اکنون توجه داشته باشید که بیشتر و بیشتر اسپری ها ظاهر می شوند زیرا آنها منتظر بودند- در
اینجا ما می رویم.
اوج
اسکار Grouch: (آواز) من عاشق سطل
زباله دیوید مالان هستم: خوب.
دور بزرگی از تشویق برای آنا.
خوب انجام شده است
خوب ، اینجا می روید.
اینجا می روید.
خوب
بنابراین این یک آهنگ قابل تعویض است.
و در واقع ، من ساعت ها در ساخت آن صرف کردم ، و فقط گوش دادن به آن آهنگ در
حلقه بهترین راه برای برنامه نبود.
اما هدف در اینجا این است که واقعاً از آن به عنوان یک تمرین فکری در مورد نحوه
اجرای آن استفاده کنیم.
و ما تمام کار را با جزئیات انجام نمی
دهیم ، زیرا من در روزی که جوان تر بودم ، دوباره
می گویم ، لزوماً پاک ترین کد را ننوشتم.
و در واقع ، اگر ما در این مورد ببینیم و در پایین صفحه نمایش در اینجا قرار می
گیریم ، می توانید همه اسپری های مختلف من را ببینید.
و کد نوعی پیچیده است.
مانند ، همه چیز فقط به سرعت افزایش یافت.
اما من همه این برنامه ها را به طور هم زمان برای
هر اسپری تنظیم نکردم و نوشتم.
من تقریباً قدم های کودک را برداشتم.
به عنوان مثال ، به من اجازه دهید فقط چند بلوک ساختمانی را در اینجا باز کنم
که با این صحبت می کنند که از قبل نوشته شده است.
بنابراین در اینجا نسخه صفر است.
دانشمندان رایانه به طور معمول شروع به شمارش صفر می کنند.
و بگذارید این مثال را در اینجا به شما نشان دهم که فقط دو اسپریت روی صفحه نمایش دارد.
ما اسکار سطل آشغال را داریم و قطعه زباله را داریم.
و اکنون توجه کنید ، اسکار چه کاری انجام می دهد؟
خوب ، بگذارید من جلو بروم و این فیلمنامه را زوم کنم ، همانطور که گفته می شود.
یک برنامه یک فیلمنامه است.
با کلیک بر روی پرچم سبز ، اسکار لباس خود را به اسکار یک تغییر می دهد.
این لباس پیش فرض او است که درب آن بسته است.
سپس اسکار این کار را برای همیشه انجام می دهد.
اگر اسکار در حال لمس کردن نشانگر ماوس است ، لباس را به اسکار دو تغییر دهید ، در
غیر این صورت آن را به اسکار یک تغییر دهید.
بنابراین این ایده کامل از انیمیشن که اسکار در آن ظاهر می شود ،
دقیقاً مانند یک تغییر سریع لباس است که
بر اساس یک حلقه در داخل آن وجود دارد ، یک شرط مشروط در انتظار
مکان نما ، مانند آنا ، نزدیک به سطل زباله است.
در همین حال ، اگر ما به قطعه زباله در اینجا
نگاه کنیم ، توجه داشته باشید که سطل زباله در این نسخه اول کاری
انجام نمی دهد زیرا من حتی در ابتدا سقوط نکردم.
بنابراین بگذارید به پرچم سبز ضربه بزنم.
در همین نسخه اول هیچ اتفاقی نمی افتد.
اما توجه داشته باشید ، اگر به محض لمس اسکار روی سطل زباله کلیک کرده و بکشید ، می
آید که سطل زباله می تواند در آن باشد.
و این فقط نتیجه این بود که این برنامه یک پاسخ به آن ورودی پاسخ دهد.
خوب
بعد چه کار کردم؟
خوب ، بعد ، بعد از برداشتن آن مرحله از کودک مجرد ، یک ویژگی دیگر را اضافه کردم.
بیایید داخل این نسخه یکی را ببینیم.
باز هم ، اسکار دقیقاً به همان روش رفتار می کند.
اما توجه کنید که این بار سطل زباله برای انجام موارد زیر طراحی شده است.
اول ، من به برنامه می گویم که حالت کشیدن قابل کشیدن است.
یعنی من می خواهم که وقتی کاربر روی آن کلیک می کند ، سطل زباله متحرک باشد.
سپس به قطعه سطل زباله می گویم تا به یک مکان X تصادفی بروید.
X افقی است ، بنابراین بین 0 تا 240 به جایی می رود
، اما تمام راه در بالای صفحه است.
180
سپس برای همیشه ، قطعه سطل زباله فقط با یک منفی تغییر می کند.
بنابراین فقط پایین و پایین و پایین حرکت می کند.
و بدون اینکه هنوز به فیلمنامه دوم نگاه کنم ، بگذارید فقط بازی کنم.
و توجه داشته باشید ، بدون حتی انجام هر کاری- و در
نهایت ، پس از ریزش زباله های زیادی ،
مانند آنا در تلاش بود تا با این کار پیروی کند.
این فقط یک پیکسل در یک زمان برای همیشه در حال حرکت است تا اینکه خوشبختانه
، MIT به طور خودکار همه چیز را متوقف می کند اگر آنها به پایین ضربه بزنند ، مبادا یک شش
ساله ناراحت شود که ناگهان اسپری آنها برای همیشه از بین رفته است.
بنابراین در آنجا برخی از پوشش های خاص وجود دارد.
اما این سطل زباله دیگر چه کار می کند؟
بگذارید اینجا بزرگنمایی کنم.
قطعه سطل زباله نیز ، هنگامی که پرچم سبز کلیک می شود ،
برای همیشه این سؤال را مطرح می کند.
اگر در حال لمس اسکار هستید ، پس از آن یک مکان تصادفی جدید بین 0 تا 240 را
در مثبت 180 انتخاب کنید و به بالا برگردید.
بنابراین به عبارت دیگر ، به محض این که این قطعه
زباله مانند این به اسکار کشیده می شود و من رها می شوم ، خود را در بالا بازآفرینی می کند.
این فقط نوعی از راه دور به بالا است و به این ترتیب این ویژگی به دنیا آمد.
و من تمام ویژگی های فردی را در اینجا شعار نمی دهم ، اما اگر فقط
یک مورد دیگر انجام دهیم و درون این یکی را ببینیم- بنابراین حالا بگذارید من جلو
بروم و بازی کنم.
توجه در سمت چپ بالای صفحه ، یک امتیاز وجود دارد.
در حال حاضر صفر.
اما اکنون وقتی روی سطل زباله کلیک می کنم و
رها می شوم ، توجه کنید که نمره توسط یک افزایش می یابد.
و این ، در واقع ، چگونه ، آنا ، نمره شما
بیشتر و بالاتر و بالاتر می رود.
هر وقت متوجه شدم ، اوه ، زباله ها اسکار را لمس می کند ، نه تنها از راه دور ، بلکه
بیایید یک متغیر را نیز افزایش دهیم.
و ما قبلاً این را ندیدیم ، اما اگر اکنون به این خراش اسکار
بروم ، خواهید دید که دقیقاً یکسان است.
اما اگر اکنون به قسمت سطل زباله می روم و وقتی پرچم سبز کلیک کرد ، می
رویم ، می بینید که من یک متغیر را در نارنجی به نام امتیاز به صفر می رسانم.
اما اگر به پایین حرکت کنیم ،
اسکار نیز به طور همزمان کار دیگری را انجام می دهد.
هنگامی که پرچم سبز کلیک می شود ، اسکار برای همیشه در حال بررسی است
، آیا قطعه سطل زباله که اسکار را لمس می کند؟
اگر چنین است ، نمره را به یک تغییر دهید و سپس به
بالا بروید ، که مکان دیگری در آنجا است ، آن صفحه.
بنابراین به عبارت دیگر ، حتی اگر در یک نگاه ممکن است چیزی
مانند زمان اسکار بسیار پیچیده به نظر برسد و ساعت ها
طول بکشد ، هدف ، به خصوص با مشکل صفر ،
قرار نیست همه اینها را به یکباره نیش بزند ، بلکه
مراحل کودک ضرب المثل را انجام می دهد.
یک ویژگی کوچک را به گونه ای پیاده سازی کنید که احساس کنید پیشرفت می کنید.
ویژگی دیگری را اضافه کنید ، دیگری.
و به طور مداوم ممکن است وقت خود را تمام
کنید و به بهترین نسخه از دید خود نرسید ، اما امیدوارم که خوب باشد.
امیدوارم که بهتر باشد ، اما به این امید که حداقل به آن نقطه برسید
، این نوع نقاط عطف ذهنی را خواهید داشت.
از آنجا که به زودی متوجه خواهید شد ، همه چیز در دنیای برنامه نویسی
متأسفانه بیشتر از آنچه انتظار دارید طول می کشد.
25 سال پیش برای من صادق بود و امروز هنوز هم صادق است.
خوب ، بگذارید یک مجموعه نهایی از نمونه ها را در اینجا معرفی کنم.
این یکی که توسط یکی از پیشینیان خود ، یک دانشجوی سابق نوشته شده است.
بگذارید من جلو بروم و سه مرحله کودک را باز کنم ، در صورت تمایل
، به پایان می رسد تا پایان اجرای یک بازی به نام سخت ترین بازی ایوی ، که به
موجب آن اکنون تعاملی تر است ، کاملاً شبیه Oscartime.
بنابراین در بالا ، توجه داشته باشید- و من
بزرگنمایی می کنم- ما این دنیا را داریم که در ابتدا بسیار ساده است.
در صورت تمایل ، دو خط سیاه ، دو دیوار ، و یک اسپریت هاروارد در وسط.
اما وقتی روی پرچم سبز کلیک می کنید ،
توجه کنید که در ابتدا هیچ اتفاقی نمی افتد به جز اینکه اسپری به وسط می پرید.
اما می توانم کلید بالا یا کلید پایین یا کلید سمت چپ یا کلید سمت راست را بزنم.
اما اگر من سعی کنم خیلی دور شوم ، حتی اگر حاشیه جهان
نباشد ، فقط خط سیاه را لمس می کند ، اما هنوز هم متوقف می شود.
بنابراین به طور شهودی ، چگونه می توانید آن نوع برنامه را پیاده سازی کنید؟
چگونه می توانید از آنچه ما دیده ایم برای پاسخ به بالا ، پایین ، چپ ، راست ، یک اسپری بدست آورید
، اما وقتی کلیدهای پیکان خود را لمس می کنم ، در واقع حرکت می کنید؟
مانند ، حرکت چیست؟
آره؟
مخاطب: شاید در این صورت.
دیوید مالان: دقیقاً.
بسیار شبیه به نمایندگی اطلاعات ، در پایان روز ، تمام آنچه که ما
بدست آورده ایم صفر و مواردی است.
وقتی صحبت از الگوریتم ها می شود ، در
حال حاضر ، تمام آنچه ما داریم توابع و حلقه ها و
شرط ها و عبارات بولی و به زودی موارد دیگری نیز هست.
اما همه چیز ما در اختیار ما نیست.
بنابراین بگذارید از این امر بزرگنمایی کنم و اجازه دهم واقعاً به شما
نشان دهم که اسپریت هاروارد چه کاری انجام می دهد.
این کار را انجام می دهد
وقتی به اینجا به پرچم سبز می روم ، اسپریت هاروارد به 0 ، 0 می رود.
So dead center in the middle.
و سپس برای همیشه دو کار را انجام می دهد ، به صفحه کلید گوش می
دهد و احساس دیوارها ، چپ و راست می کند.
اکنون ، این قطعات پازل نیستند که دارای خراش هستند.
من بلوک های سفارشی خودم را ایجاد کردم ، کارکردهای خودم برای اجرای آن ایده ها.
فعلاً بیایید انتزاعی نباشیم.
بیایید در واقع به این ویژگی ها نگاه کنیم.
و در واقع ، به غرایز خود در سمت چپ
در اینجا ، گوش دادن به صفحه کلید چیست؟
خوب ، اگر کلید فلش بالا فشرده شد ، y را به یک تغییر دهید.
بالا بروید
اگر کلید فلش پایین فشرده شده است ، y را توسط منفی تغییر دهید.
اگر کلید فلش راست فشار داده شده است ، x را به یک تغییر دهید.
اگر کلید پیکان سمت چپ فشار داده شود ، x را با یک منفی تغییر دهید.
بنابراین تمام جادوها را از حرکت به سمت بالا ، پایین
، چپ ، راست و فقط با کمیت کردن آن به علاوه ، منهای ، این و آن ، دور کنید.
این همه تعداد ، در واقع ، در پایان روز است.
اما چه کار دیگری انجام می دهد؟
توجه کنید که در واقع این کار را از دیوار گزاف گویی کرد.
بنابراین عملکرد سفارشی دیگر من ، که من انتخاب کردم ،
احساس می کنم دیوارها برای برانگیختن این ایده ، این دو سؤال را مطرح می کند.
اگر در حال لمس دیوار سمت چپ هستید ، سپس x را به یک تغییر دهید
، بنابراین در جهت دیگر گزاف گویی کنید.
در غیر این صورت اگر در حال لمس دیوار مناسب هستید ، در یک جهت منفی گزاف گویی کنید.
و بنابراین دیوار چپ و دیوار راست چیست؟
منظورم این است که من نوعی تقلب کردم.
من فقط از دو اسپری دیگر استفاده کردم.
این اسپری ها به معنای واقعی کلمه چیزی جز خطوط سیاه نیستند.
اما از آنجا که آنها وجود دارند ، من می توانم این سؤال را در گفته مشروط خود بپرسم ،
آیا شما آن اسپریت های دیگر را لمس می کنید؟
و من می توانستم آنها را به هر شکلی که می خواهم رنگ آمیزی کنم ، اما این کافی
است ، اگر من بزرگنمایی کنم ، این ایده را برای بالا رفتن ،
پایین ، چپ و راست و جلوگیری از ترک آن دنیای کوچک اجرا کنم.
خوب
بنابراین اگر موافقت خواهید کرد که اکنون راهی برای اجرای حرکت به سمت بالا
، پایین ، چپ ، راست وجود دارد ، بیایید پیش برویم و این ایده را با
اضافه کردن یک رقیب به ترکیب ، مانند یک اسپری ییل اجرا کنیم.
و اگر روی پرچم سبز کلیک کنم ، این کار را انجام می دهد.
بنابراین هاروارد در حال حاضر هنوز با کلیدهای فلش ، بالا ، پایین ، چپ ،
راست ، متحرک خواهد بود.
اما به نظر می رسد ییل ، ​​برای بهتر
یا بدتر ، فقط به نظر می رسد که بی فکر از چپ و راست برای
همیشه گزاف گویی کند.
کلمه عملیاتی برای همیشه.
پس چگونه کار می کند؟
خوب ، بیایید نگاه کنیم.
در اینجا Sprite Yale در پایین قرار دارد.
بیایید کد واقعی آن را در اینجا بزرگنمایی کنیم.
Sprite Yale از 0 ، 0 شروع می شود.
It points in direction 90 degrees, which means left, right, essentially.
و سپس برای همیشه این کار را انجام می دهد.
در صورت لمس کردن دیوار سمت چپ یا لمس کردن دیوار راست ، حدود 180 درجه را بچرخانید.
بنابراین من نمی خواهم که yale sprite فقط با
حرکت دادن یک پیکسل متوقف شود تا کمی گزاف گویی شود.
من می خواهم که آن را بپیچد و فقط ادامه یابد و برود و برود.
و همین است.
هر چیز دیگری یکسان است.
بنابراین یک شکوفایی نهایی.
بیایید یک دشمن قدرتمندتر را مانند MIT در اینجا اضافه کنیم ، به
موجب آن اگر من بزرگنمایی کنم و بازی کنم ، توجه
داشته باشید که اگر اسپری هاروارد را حرکت دهم ، MIT اکنون مرا تعقیب می کند.
حال ، این واقعاً چگونه کار می کند؟
ییل فقط نوعی انجام کار خود است و به عقب و جلو می رود.
اکنون MIT واقعاً به من چسبیده است و من را بالا ، پایین ، چپ ، راست دنبال می کند.
بنابراین چگونه این منطق اکنون کار می کند؟
خوب ، باز هم ، احتمالاً برای همیشه کاری انجام می دهد ، زیرا
به همین دلیل است که به طور مداوم آن را انجام می دهد.
بیایید روی MIT کلیک کنیم.
این نیز بسیار ساده است ، حتی اگر این یک ایده بسیار فانتزی باشد.
در ابتدا MIT Sprite به یک موقعیت تصادفی می
رود ، اما پس از آن ، برای همیشه به سمت طرح آرم هاروارد اشاره می
کند ، که فقط نامی طولانی است که سلف یا دانش آموز سابق
شما نام آن Sprite را داده است.
و سپس یک قدم ، یک مرحله ، یک قدم حرکت می کند.
بنابراین فرض کنید این یک بازی واقعی بود و در بازی ها همه
چیز سخت تر و سخت تر می شود ، دشمن سریعتر و سریعتر حرکت می کند.
چگونه می توانیم با تغییر یک چیز در اینجا ، MIT را حتی سریعتر کنیم؟
مانند ، چگونه سطح بالا می رویم؟
یک تا دو پیکسل را همزمان ، دو مرحله در یک زمان تغییر دهید.
بنابراین بیایید آن را ببینیم.
بیایید جلو برویم و بزرگنمایی کنیم.
بیایید به بازی ضربه بزنیم.
و اکنون توجه داشته باشید که MIT این بار خیلی سریعتر می آید.
خوب
بنابراین به طرز چشمگیری سریعتر نبود.
بیایید این کار را انجام دهیم
بیایید 10 قدم را به طور همزمان حرکت دهیم.
بنابراین 10 قدم سریعتر از ابتدا.
منظورم این است که ، اکنون- و اکنون توجه کنید که این نوع پیچش به جلو و عقب است.
چرا؟
خوب ، احتمالاً ، اگر ما ریاضیات را کار کنیم ،
احتمالاً MIT Sprite در حال لمس کردن اسپری است و از آن تندرست است
، اما بعد متوجه می شود ، اوه ، من خیلی دور رفتم.
بگذارید به عقب برگردم.
یک دقیقه صبر کنید.
من هنوز آن را لمس می کنم.
بگذارید پایین بیایم
بنابراین می توانید در این موقعیت های آشکار قرار
بگیرید که در واقع یک اشکال وجود دارد ، چه منطقی یا زیبایی باشد.
اما در این حالت ، ما احتمالاً می خواهیم این مسئله را برطرف کنیم.
بنابراین 10 احتمالاً خیلی سریع برای این کار بسیار خوب است.
اما شکوفایی نهایی در اینجا واقعاً این است که نسخه واقعی یک بازی را به شما نشان
دهد که یکی از پیشینیان شما ، یک همکلاسی گذشته ، در واقع اجرا شده است.
قبل از آن ، پس از آن ، ما برای کیک در
Transept ، که سنت CS50 است ، به تعویق می اندازیم.
اما آیا می توانیم یک داوطلب نهایی دیگر را بدست آوریم
تا سخت ترین بازی ایوی را انجام دهیم؟
من دست شما را با اشتیاق در آنجا می بینم.
بله ، بیا پایین
خیلی خوشبخت
[تشویق]
فقط در یک لحظه ، ما واقعاً به تعویق می افتیم.
اما هدف در اینجا اکنون قرار است پیمایش پیچ و خم را که
کمی دشوارتر از گذشته است ، حرکت کند.
بیایید ابتدا شما را داشته باشیم ، خود را با همکلاسی های خود در جلو معرفی کنید.
مخاطب: سلام ، شما.
من اریک هستم
من اهل فیلادلفیا هستم و من هم اهل هالیس هال هستم.
[به سلامتی]
دیوید مالان: یک نفر از هالیس.
خوب
خوب
خوش آمدید
خوب
اریک ، پیش بروید و صفحه کلید را اینجا بگیرید.
به محض اینکه روی پرچم سبز کلیک کنید ، همه چیز در مورد بالا
، پایین ، چپ ، راست خواهد بود.
و اگر بتوانیم موسیقی را لنگ کنیم.
[مک هامر ، "تو نمی توانی این را لمس کنی"]
شما نمی توانید این
دیوید مالان را لمس کنید: بنابراین توجه کنید ، دیوارهای سیاه کمی بیشتر از
دفعه قبل درگیر هستند.
اما هدف این است که تمام راه را به سمت راست و فقط لمس کنید
و فقط آن را لمس کنید ، در این مرحله به سطح بعدی حرکت می کنید.
البته سطح بعدی ، ییل کار خود را به عقب و جلو انجام می دهد.
شما آن را به سطح سه تبدیل کرده اید.
اما اکنون دو ییل وجود دارد.
بنابراین یک اسپری دیگر در ترکیب است که
به طور تصادفی از نظر جهت کمی متفاوت است.
سه yales.
سطح بعدی
MIT در است.
خوب
اکنون دیوارها از بین رفته اند.
پرینستون در ترکیب است.
خوب
دو پرینستون.
خوب
زندگی جدید
خوب ، زندگی دیگری.
خوب
خوب
اوه
خوب
سطح دوم تا آخر.
سه پرینستون.
سطح آخر
آره
تبریک می گویم
[تشویق]
ممنون
خوب
این ، پس از آن ، CS50 بود.
خوش آمدید در داخل
کیک اکنون سرو شده است.
[پخش موسیقی]
